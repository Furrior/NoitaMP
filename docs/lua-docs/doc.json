[
    {
        "defines": [
            {
                "extends": {
                    "finish": 10330048,
                    "start": 10330016,
                    "type": "select",
                    "view": "SockClient"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 10330009,
                "start": 10330000,
                "type": "setfield"
            }
        ],
        "desc": "See: [SockClient](file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua#20#14)",
        "name": "Client",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 50022,
                    "start": 50020,
                    "type": "table",
                    "view": "ClientInit"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 50010,
                "start": 50000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 10290026,
                    "start": 10290016,
                    "type": "getglobal",
                    "view": "ClientInit"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 10290013,
                "start": 10290000,
                "type": "setfield"
            }
        ],
        "desc": "ClientInit class extends [SockClient#](file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/%23SockClient)\nSee: [SockClient](file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua#20#14)",
        "name": "ClientInit",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 40020,
                "start": 40010,
                "type": "doc.class"
            }
        ],
        "desc": "ClientInit class extends [SockClient#](file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/%23SockClient)",
        "fields": [
            {
                "desc": "ClientInit 'constructor'. Creates a new extended instance of sockClient 'class'.",
                "extends": {
                    "args": [
                        {
                            "finish": 170034,
                            "start": 170024,
                            "type": "local",
                            "view": "SockClient"
                        }
                    ],
                    "desc": "ClientInit 'constructor'. Creates a new extended instance of sockClient 'class'.",
                    "finish": 10240003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "SockClient"
                        }
                    ],
                    "start": 170000,
                    "type": "function",
                    "view": "function ClientInit.new(sockClient: SockClient)\n  -> self: SockClient"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 170023,
                "name": "new",
                "start": 170009,
                "type": "setfield"
            }
        ],
        "name": "ClientInit",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 170034,
                            "start": 170024,
                            "type": "local",
                            "view": "SockClient"
                        }
                    ],
                    "desc": "ClientInit 'constructor'. Creates a new extended instance of sockClient 'class'.",
                    "finish": 10240003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "SockClient"
                        }
                    ],
                    "start": 170000,
                    "type": "function",
                    "view": "function ClientInit.new(sockClient: SockClient)\n  -> self: SockClient"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 170023,
                "start": 170009,
                "type": "setfield"
            }
        ],
        "desc": "ClientInit 'constructor'. Creates a new extended instance of sockClient 'class'.",
        "name": "ClientInit.new",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 140035,
                    "start": 140033,
                    "type": "table",
                    "view": "CustomProfiler"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 140014,
                "start": 140000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 2630034,
                    "start": 2630020,
                    "type": "getglobal",
                    "view": "CustomProfiler"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 2630017,
                "start": 2630000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 230027,
                    "start": 230025,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 230022,
                "start": 230008,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 250027,
                    "start": 250025,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 250022,
                "start": 250008,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 500027,
                    "start": 500025,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 500022,
                "start": 500008,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 210033,
                    "start": 210031,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 210022,
                "start": 210008,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 190029,
                    "start": 190027,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GuidUtils.lua",
                "finish": 190018,
                "start": 190004,
                "type": "setglobal"
            }
        ],
        "desc": " Fix stupid Noita sandbox issue. Noita Components does not have access to require.",
        "name": "CustomProfiler",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 130024,
                "start": 130010,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "desc": " ms",
                "extends": {
                    "finish": 180037,
                    "start": 180033,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 180022,
                "name": "ceiling",
                "start": 180000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 160034,
                    "start": 160033,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 160022,
                "name": "counter",
                "start": 160000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 530081,
                    "start": 530055,
                    "type": "binary",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 530026,
                "name": "counter",
                "start": 530004,
                "type": "setfield"
            },
            {
                "desc": " Simply returns the duration of a specific function. This is used to determine the duration of a function.\n\n@*param* `functionName` — Has to be the same as the one used in start()\n\n@*param* `customProfilerCounter` — Has to be the same as the one returned by start()",
                "extends": {
                    "args": [
                        {
                            "desc": "Has to be the same as the one used in start()",
                            "finish": 600048,
                            "start": 600036,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Has to be the same as the one returned by start()",
                            "finish": 600071,
                            "start": 600050,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Simply returns the duration of a specific function. This is used to determine the duration of a function.\n\n@*param* `functionName` — Has to be the same as the one used in start()\n\n@*param* `customProfilerCounter` — Has to be the same as the one returned by start()",
                    "finish": 680003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 600000,
                    "type": "function",
                    "view": "function CustomProfiler.getDuration(functionName: string, customProfilerCounter: number)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 600035,
                "name": "getDuration",
                "start": 600009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 2590003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 2530000,
                    "type": "function",
                    "view": "function CustomProfiler.getSize()\n  -> unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 2530031,
                "name": "getSize",
                "start": 2530009,
                "type": "setfield"
            },
            {
                "desc": " entries per trace",
                "extends": {
                    "finish": 190035,
                    "start": 190033,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 190025,
                "name": "maxEntries",
                "start": 190000,
                "type": "setfield"
            },
            {
                "desc": " Creates a report of all the functions that were profiled into profiler_2022-11-24_20-23-00.json",
                "extends": {
                    "args": [],
                    "desc": " Creates a report of all the functions that were profiled into profiler_2022-11-24_20-23-00.json",
                    "finish": 2510003,
                    "start": 2320000,
                    "type": "function",
                    "view": "function CustomProfiler.report()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 2320030,
                "name": "report",
                "start": 2320009,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 150035,
                    "start": 150033,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 150026,
                "name": "reportCache",
                "start": 150000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 210112,
                    "start": 200033,
                    "type": "select",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 200030,
                "name": "reportDirectory",
                "start": 200000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 220056,
                    "start": 220043,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 220029,
                "name": "reportFilename",
                "start": 220000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 230052,
                    "start": 230043,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 230040,
                "name": "reportJsonFilenamePattern",
                "start": 230000,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 270042,
                            "start": 270030,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": 550003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 270000,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: string)\n  -> number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 270029,
                "name": "start",
                "start": 270009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 250050,
                            "start": 250038,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 300011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 250008,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 250037,
                "name": "start",
                "start": 250017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 270050,
                            "start": 270038,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 320011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 270008,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 270037,
                "name": "start",
                "start": 270017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 520050,
                            "start": 520038,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 570011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 520008,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 520037,
                "name": "start",
                "start": 520017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 230052,
                            "start": 230040,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": 270011,
                    "start": 230031,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: string)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 230028,
                "name": "start",
                "start": 230008,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 200048,
                            "start": 200036,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 240007,
                    "start": 200027,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GuidUtils.lua",
                "finish": 200024,
                "name": "start",
                "start": 200004,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 780041,
                            "start": 780029,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 780064,
                            "start": 780043,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": 2280003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        }
                    ],
                    "start": 780000,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: string, customProfilerCounter: number)\n  -> integer|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 780028,
                "name": "stop",
                "start": 780009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 330049,
                            "start": 330037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 330072,
                            "start": 330051,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 380011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 330008,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: any, customProfilerCounter: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 330036,
                "name": "stop",
                "start": 330017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 350049,
                            "start": 350037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 350072,
                            "start": 350051,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 400011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 350008,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: any, customProfilerCounter: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 350036,
                "name": "stop",
                "start": 350017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 600049,
                            "start": 600037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 600072,
                            "start": 600051,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 650011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 600008,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: any, customProfilerCounter: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 600036,
                "name": "stop",
                "start": 600017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 280052,
                            "start": 280040,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 280075,
                            "start": 280054,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 320011,
                    "start": 280031,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: any, customProfilerCounter: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 280027,
                "name": "stop",
                "start": 280008,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 250048,
                            "start": 250036,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 250071,
                            "start": 250050,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 290007,
                    "start": 250027,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: any, customProfilerCounter: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GuidUtils.lua",
                "finish": 250023,
                "name": "stop",
                "start": 250004,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 740003,
                    "start": 700000,
                    "type": "function",
                    "view": "function CustomProfiler.stopAll()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 700031,
                "name": "stopAll",
                "start": 700009,
                "type": "setfield"
            },
            {
                "desc": "ms = 60.60 fps",
                "extends": {
                    "finish": 170037,
                    "start": 170033,
                    "type": "number",
                    "view": "number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 170024,
                "name": "threshold",
                "start": 170000,
                "type": "setfield"
            }
        ],
        "name": "CustomProfiler",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 180037,
                    "start": 180033,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 180022,
                "start": 180000,
                "type": "setfield"
            }
        ],
        "desc": " ms",
        "name": "CustomProfiler.ceiling",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 160034,
                    "start": 160033,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 160022,
                "start": 160000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 530081,
                    "start": 530055,
                    "type": "binary",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 530026,
                "start": 530004,
                "type": "setfield"
            }
        ],
        "name": "CustomProfiler.counter",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Has to be the same as the one used in start()",
                            "finish": 600048,
                            "start": 600036,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Has to be the same as the one returned by start()",
                            "finish": 600071,
                            "start": 600050,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Simply returns the duration of a specific function. This is used to determine the duration of a function.\n\n@*param* `functionName` — Has to be the same as the one used in start()\n\n@*param* `customProfilerCounter` — Has to be the same as the one returned by start()",
                    "finish": 680003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 600000,
                    "type": "function",
                    "view": "function CustomProfiler.getDuration(functionName: string, customProfilerCounter: number)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 600035,
                "start": 600009,
                "type": "setfield"
            }
        ],
        "desc": " Simply returns the duration of a specific function. This is used to determine the duration of a function.\n\n@*param* `functionName` — Has to be the same as the one used in start()\n\n@*param* `customProfilerCounter` — Has to be the same as the one returned by start()",
        "name": "CustomProfiler.getDuration",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 2590003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 2530000,
                    "type": "function",
                    "view": "function CustomProfiler.getSize()\n  -> unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 2530031,
                "start": 2530009,
                "type": "setfield"
            }
        ],
        "name": "CustomProfiler.getSize",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 190035,
                    "start": 190033,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 190025,
                "start": 190000,
                "type": "setfield"
            }
        ],
        "desc": " entries per trace",
        "name": "CustomProfiler.maxEntries",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": " Creates a report of all the functions that were profiled into profiler_2022-11-24_20-23-00.json",
                    "finish": 2510003,
                    "start": 2320000,
                    "type": "function",
                    "view": "function CustomProfiler.report()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 2320030,
                "start": 2320009,
                "type": "setfield"
            }
        ],
        "desc": " Creates a report of all the functions that were profiled into profiler_2022-11-24_20-23-00.json",
        "name": "CustomProfiler.report",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 150035,
                    "start": 150033,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 150026,
                "start": 150000,
                "type": "setfield"
            }
        ],
        "name": "CustomProfiler.reportCache",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 210112,
                    "start": 200033,
                    "type": "select",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 200030,
                "start": 200000,
                "type": "setfield"
            }
        ],
        "name": "CustomProfiler.reportDirectory",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 220056,
                    "start": 220043,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 220029,
                "start": 220000,
                "type": "setfield"
            }
        ],
        "name": "CustomProfiler.reportFilename",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 230052,
                    "start": 230043,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 230040,
                "start": 230000,
                "type": "setfield"
            }
        ],
        "name": "CustomProfiler.reportJsonFilenamePattern",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 270042,
                            "start": 270030,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": 550003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 270000,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: string)\n  -> number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 270029,
                "start": 270009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 250050,
                            "start": 250038,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 300011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 250008,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 250037,
                "start": 250017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 270050,
                            "start": 270038,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 320011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 270008,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 270037,
                "start": 270017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 520050,
                            "start": 520038,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 570011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 520008,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 520037,
                "start": 520017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 230052,
                            "start": 230040,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": 270011,
                    "start": 230031,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: string)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 230028,
                "start": 230008,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 200048,
                            "start": 200036,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 240007,
                    "start": 200027,
                    "type": "function",
                    "view": "function CustomProfiler.start(functionName: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GuidUtils.lua",
                "finish": 200024,
                "start": 200004,
                "type": "setfield"
            }
        ],
        "name": "CustomProfiler.start",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 780041,
                            "start": 780029,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 780064,
                            "start": 780043,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": 2280003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        }
                    ],
                    "start": 780000,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: string, customProfilerCounter: number)\n  -> integer|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 780028,
                "start": 780009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 330049,
                            "start": 330037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 330072,
                            "start": 330051,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 380011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 330008,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: any, customProfilerCounter: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 330036,
                "start": 330017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 350049,
                            "start": 350037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 350072,
                            "start": 350051,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 400011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 350008,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: any, customProfilerCounter: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 350036,
                "start": 350017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 600049,
                            "start": 600037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 600072,
                            "start": 600051,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 650011,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 600008,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: any, customProfilerCounter: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 600036,
                "start": 600017,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 280052,
                            "start": 280040,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 280075,
                            "start": 280054,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 320011,
                    "start": 280031,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: any, customProfilerCounter: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 280027,
                "start": 280008,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 250048,
                            "start": 250036,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 250071,
                            "start": 250050,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 290007,
                    "start": 250027,
                    "type": "function",
                    "view": "function CustomProfiler.stop(functionName: any, customProfilerCounter: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GuidUtils.lua",
                "finish": 250023,
                "start": 250004,
                "type": "setfield"
            }
        ],
        "name": "CustomProfiler.stop",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 740003,
                    "start": 700000,
                    "type": "function",
                    "view": "function CustomProfiler.stopAll()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 700031,
                "start": 700009,
                "type": "setfield"
            }
        ],
        "name": "CustomProfiler.stopAll",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 170037,
                    "start": 170033,
                    "type": "number",
                    "view": "number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/CustomProfiler.lua",
                "finish": 170024,
                "start": 170000,
                "type": "setfield"
            }
        ],
        "desc": "ms = 60.60 fps",
        "name": "CustomProfiler.threshold",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 10016,
                    "start": 10014,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 10011,
                "start": 10000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 240035,
                    "start": 240033,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 240019,
                "start": 240008,
                "type": "setglobal"
            }
        ],
        "desc": " EntityCache.",
        "name": "EntityCache",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 430027,
                    "start": 430025,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 430017,
                "start": 430000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 760030,
                    "start": 760028,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 760025,
                "start": 760008,
                "type": "setfield"
            }
        ],
        "name": "EntityCache.cache",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950042,
                            "start": 950034,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1020003,
                    "start": 950025,
                    "type": "function",
                    "view": "function EntityCache.delete(entityId: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 950018,
                "start": 950000,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 250050,
                            "start": 250042,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 290011,
                    "start": 250033,
                    "type": "function",
                    "view": "function EntityCache.delete(entityId: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 250026,
                "start": 250008,
                "type": "setfield"
            }
        ],
        "name": "EntityCache.delete",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1040038,
                            "start": 1040034,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1150003,
                    "start": 1040025,
                    "type": "function",
                    "view": "function EntityCache.deleteNuid(nuid: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 1040022,
                "start": 1040000,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 420046,
                            "start": 420042,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 460011,
                    "start": 420033,
                    "type": "function",
                    "view": "function EntityCache.deleteNuid(nuid: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 420030,
                "start": 420008,
                "type": "setfield"
            }
        ],
        "name": "EntityCache.deleteNuid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 700042,
                            "start": 700034,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 850003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown|nil"
                        }
                    ],
                    "start": 700025,
                    "type": "function",
                    "view": "function EntityCache.get(entityId: any)\n  -> unknown|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 700015,
                "start": 700000,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 300050,
                            "start": 300042,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 340011,
                    "start": 300033,
                    "type": "function",
                    "view": "function EntityCache.get(entityId: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 300023,
                "start": 300008,
                "type": "setfield"
            }
        ],
        "name": "EntityCache.get",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 870038,
                            "start": 870034,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 930003,
                    "start": 870025,
                    "type": "function",
                    "view": "function EntityCache.getNuid(nuid: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 870019,
                "start": 870000,
                "type": "setfield"
            }
        ],
        "name": "EntityCache.getNuid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 440042,
                            "start": 440034,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 440048,
                            "start": 440044,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 440059,
                            "start": 440050,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 440070,
                            "start": 440061,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 440080,
                            "start": 440072,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 440083,
                            "start": 440082,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 440086,
                            "start": 440085,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 440096,
                            "start": 440088,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 440102,
                            "start": 440098,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 440108,
                            "start": 440104,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 450047,
                            "start": 450034,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 450058,
                            "start": 450049,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 680003,
                    "start": 440025,
                    "type": "function",
                    "view": "function EntityCache.set(entityId: any, nuid: any, ownerGuid: any, ownerName: any, filepath: any, x: any, y: any, rotation: any, velX: any, velY: any, currentHealth: any, maxHealth: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 440015,
                "start": 440000,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 350050,
                            "start": 350042,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 350060,
                            "start": 350052,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 350075,
                            "start": 350062,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 350090,
                            "start": 350077,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 350100,
                            "start": 350092,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 350103,
                            "start": 350102,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 350106,
                            "start": 350105,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 350116,
                            "start": 350108,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 350127,
                            "start": 350118,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 360051,
                            "start": 360042,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 360066,
                            "start": 360053,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 360077,
                            "start": 360068,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 410011,
                    "start": 350033,
                    "type": "function",
                    "view": "function EntityCache.set(entityId: any, compNuid: any, compOwnerGuid: any, compOwnerName: any, filename: any, x: any, y: any, rotation: any, velocityX: any, velocityY: any, healthCurrent: any, healthMax: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 350023,
                "start": 350008,
                "type": "setfield"
            }
        ],
        "name": "EntityCache.set",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1220003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer|unknown"
                        }
                    ],
                    "start": 1170025,
                    "type": "function",
                    "view": "function EntityCache.size()\n  -> integer|unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 1170016,
                "start": 1170000,
                "type": "setfield"
            }
        ],
        "name": "EntityCache.size",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1290003,
                    "start": 1240025,
                    "type": "function",
                    "view": "function EntityCache.usage()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 1240017,
                "start": 1240000,
                "type": "setfield"
            }
        ],
        "name": "EntityCache.usage",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 420030,
                    "start": 420025,
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 420018,
                "start": 420000,
                "type": "setfield"
            }
        ],
        "desc": " not _G.disableLuaExtensionsDLL",
        "name": "EntityCache.usingC",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1330027,
                    "start": 1330025,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 1330016,
                "start": 1330000,
                "type": "setglobal"
            }
        ],
        "desc": " EntityCacheUtils\n Utils class only for cache of entities.",
        "name": "EntityCacheUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1350042,
                            "start": 1350034,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1350048,
                            "start": 1350044,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1350059,
                            "start": 1350050,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1350070,
                            "start": 1350061,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1350080,
                            "start": 1350072,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1350083,
                            "start": 1350082,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1350086,
                            "start": 1350085,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1350096,
                            "start": 1350088,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1350102,
                            "start": 1350098,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1350108,
                            "start": 1350104,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1360047,
                            "start": 1360034,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1360058,
                            "start": 1360049,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1760003,
                    "start": 1350025,
                    "type": "function",
                    "view": "function EntityCacheUtils.set(entityId: any, nuid: any, ownerGuid: any, ownerName: any, filepath: any, x: any, y: any, rotation: any, velX: any, velY: any, currentHealth: any, maxHealth: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 1350020,
                "start": 1350000,
                "type": "setfield"
            }
        ],
        "name": "EntityCacheUtils.set",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 10029,
                    "start": 10027,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 10024,
                "start": 10000,
                "type": "setglobal"
            }
        ],
        "desc": " EntitySerialisationUtils: Utils class only for serialisation of entities.",
        "name": "EntitySerialisationUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 590001,
                    "start": 480054,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 480044,
                "start": 480000,
                "type": "setfield"
            }
        ],
        "desc": " It can happen, that there are more than on component per type.\n Then we need to know how to determine those.\n The keys/members listed below can help!",
        "name": "EntitySerialisationUtils.componentIdentifier",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 3790001,
                    "start": 3650054,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 3650051,
                "start": 3650000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.componentObjectMemberNames",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 2330001,
                    "start": 600054,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 600038,
                "start": 600000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.componentTags",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7320072,
                            "start": 7320064,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 7320085,
                            "start": 7320074,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 7320106,
                            "start": 7320087,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 7530003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 7320055,
                    "type": "function",
                    "view": "function EntitySerialisationUtils.deserializeComponentTags(entityId: any, componentId: any, serialisedComponent: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 7320049,
                "start": 7320000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.deserializeComponentTags",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5560084,
                            "start": 5560064,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 5880003,
                    "start": 5560055,
                    "type": "function",
                    "view": "function EntitySerialisationUtils.deserializeEntireRootEntity(serializedRootEntity: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 5560052,
                "start": 5560000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.deserializeEntireRootEntity",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5900072,
                            "start": 5900064,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 5900094,
                            "start": 5900074,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 6100003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 5900055,
                    "type": "function",
                    "view": "function EntitySerialisationUtils.deserializeEntityAttributes(entityId: any, serializedRootEntity: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 5900052,
                "start": 5900000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.deserializeEntityAttributes",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6310072,
                            "start": 6310064,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 6310094,
                            "start": 6310074,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 7300003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 6310055,
                    "type": "function",
                    "view": "function EntitySerialisationUtils.deserializeEntityComponents(entityId: any, serializedRootEntity: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 6310052,
                "start": 6310000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.deserializeEntityComponents",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6120072,
                            "start": 6120064,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 6120094,
                            "start": 6120074,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 6290003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 6120055,
                    "type": "function",
                    "view": "function EntitySerialisationUtils.deserializeEntityTags(entityId: any, serializedRootEntity: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 6120046,
                "start": 6120000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.deserializeEntityTags",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 3060001,
                    "start": 2340054,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 2340037,
                "start": 2340000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.materialTags",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5380075,
                            "start": 5380064,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 5540003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|nil"
                        }
                    ],
                    "start": 5380055,
                    "type": "function",
                    "view": "function EntitySerialisationUtils.serializeComponentTags(componentId: any)\n  -> string|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 5380047,
                "start": 5380000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.serializeComponentTags",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3840072,
                            "start": 3840064,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "nuid can only be nil, when being Client",
                            "finish": 3840078,
                            "start": 3840074,
                            "type": "local",
                            "view": "number|nil"
                        }
                    ],
                    "desc": "@*param* `nuid` — nuid can only be nil, when being Client",
                    "finish": 4300003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "table|nil"
                        }
                    ],
                    "start": 3840055,
                    "type": "function",
                    "view": "function EntitySerialisationUtils.serializeEntireRootEntity(entityId: number, nuid: number|nil)\n  -> boolean|nil\n  2. table|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 3840050,
                "start": 3840000,
                "type": "setfield"
            }
        ],
        "desc": "@*param* `nuid` — nuid can only be nil, when being Client",
        "name": "EntitySerialisationUtils.serializeEntireRootEntity",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4320072,
                            "start": 4320064,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 4520003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 4320055,
                    "type": "function",
                    "view": "function EntitySerialisationUtils.serializeEntityAttributes(entityId: any)\n  -> table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 4320050,
                "start": 4320000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.serializeEntityAttributes",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4710072,
                            "start": 4710064,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 5360003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 4710055,
                    "type": "function",
                    "view": "function EntitySerialisationUtils.serializeEntityComponents(entityId: any)\n  -> table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 4710050,
                "start": 4710000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.serializeEntityComponents",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4540072,
                            "start": 4540064,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 4690003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown|nil"
                        }
                    ],
                    "start": 4540055,
                    "type": "function",
                    "view": "function EntitySerialisationUtils.serializeEntityTags(entityId: any)\n  -> unknown|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 4540044,
                "start": 4540000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.serializeEntityTags",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 3640001,
                    "start": 3610054,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 3610034,
                "start": 3610000,
                "type": "setfield"
            }
        ],
        "desc": " Looks like some internal types aren't correct.\n i.e.: ComponentGetValue2 returns number instead of boolean for 'friend_firemage'.",
        "name": "EntitySerialisationUtils.typeFixes",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 3580001,
                    "start": 3070054,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 3070045,
                "start": 3070000,
                "type": "setfield"
            }
        ],
        "name": "EntitySerialisationUtils.unsupportedDataTypes",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 10077,
                    "start": 10014,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/lua_component_enabler.lua",
                "finish": 10011,
                "start": 10000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 10077,
                    "start": 10014,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/name_tags.lua",
                "finish": 10011,
                "start": 10000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 30085,
                    "start": 30022,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/nuid_debug.lua",
                "finish": 30011,
                "start": 30000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 20086,
                    "start": 20023,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/nuid_updater.lua",
                "finish": 20011,
                "start": 20000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 730020,
                    "start": 730018,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 730015,
                "start": 730004,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 7650028,
                    "start": 7650017,
                    "type": "getglobal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 7650014,
                "start": 7650000,
                "type": "setfield"
            }
        ],
        "desc": " Because of stack overflow errors when loading lua files,\n I decided to put Utils 'classes' into globals",
        "name": "EntityUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6970066,
                            "start": 6970053,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": " Simply adds a ugly debug circle around the player to visualize the detection radius.",
                    "finish": 7590003,
                    "start": 6970000,
                    "type": "function",
                    "view": "function EntityUtils.addOrChangeDetectionRadiusDebug(player_entity: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 6970052,
                "start": 6970009,
                "type": "setfield"
            }
        ],
        "desc": " Simply adds a ugly debug circle around the player to visualize the detection radius.",
        "name": "EntityUtils.addOrChangeDetectionRadiusDebug",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 770035,
                    "start": 770029,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 770026,
                "start": 770000,
                "type": "setfield"
            }
        ],
        "desc": " Contains all entities, which are alive",
        "name": "EntityUtils.aliveEntityIds",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6470039,
                            "start": 6470035,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "desc": "The nuid of the entity.",
                            "finish": 6470045,
                            "start": 6470041,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Destroys the entity by the given nuid.\n\n@*param* `nuid` — The nuid of the entity.",
                    "finish": 6920003,
                    "start": 6470000,
                    "type": "function",
                    "view": "function EntityUtils.destroyByNuid(peer: any, nuid: number)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 6470034,
                "start": 6470009,
                "type": "setfield"
            }
        ],
        "desc": " Destroys the entity by the given nuid.\n\n@*param* `nuid` — The nuid of the entity.",
        "name": "EntityUtils.destroyByNuid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Id of any entity.",
                            "finish": 2850043,
                            "start": 2850035,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Looks like there were access to removed entities, which might cause game crashing.\n Use this function whenever you work with entity_id/entityId to stop client game crashing.\n\n@*param* `entityId` — Id of any entity.\n\n@*return* `entityId` — returns the entityId if is alive, otherwise false",
                    "finish": 2940003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number|false"
                        }
                    ],
                    "start": 2850000,
                    "type": "function",
                    "view": "function EntityUtils.isEntityAlive(entityId: number)\n  -> entityId: number|false"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 2850034,
                "start": 2850009,
                "type": "setfield"
            }
        ],
        "desc": " Looks like there were access to removed entities, which might cause game crashing.\n Use this function whenever you work with entity_id/entityId to stop client game crashing.\n\n@*param* `entityId` — Id of any entity.\n\n@*return* `entityId` — returns the entityId if is alive, otherwise false",
        "name": "EntityUtils.isEntityAlive",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2240049,
                            "start": 2240041,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Checks if a specific entity is polymorphed.",
                    "finish": 2360003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2240000,
                    "type": "function",
                    "view": "function EntityUtils.isEntityPolymorphed(entityId: number)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 2240040,
                "start": 2240009,
                "type": "setfield"
            }
        ],
        "desc": " Checks if a specific entity is polymorphed.",
        "name": "EntityUtils.isEntityPolymorphed",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2410043,
                            "start": 2410035,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 2770003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2410000,
                    "type": "function",
                    "view": "function EntityUtils.isRemoteMinae(entityId: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 2410034,
                "start": 2410009,
                "type": "setfield"
            }
        ],
        "name": "EntityUtils.isRemoteMinae",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 800044,
                    "start": 800043,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 800040,
                "start": 800000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1030067,
                    "start": 1030059,
                    "type": "getlocal",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 1030056,
                "start": 1030016,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1150071,
                    "start": 1150063,
                    "type": "getlocal",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 1150060,
                "start": 1150020,
                "type": "setfield"
            }
        ],
        "desc": " Contains the highest alive entity id",
        "name": "EntityUtils.previousHighestAliveEntityId",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 5670003,
                    "start": 2990000,
                    "type": "function",
                    "view": "function EntityUtils.processAndSyncEntityNetworking()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 2990051,
                "start": 2990009,
                "type": "setfield"
            }
        ],
        "name": "EntityUtils.processAndSyncEntityNetworking",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5820038,
                            "start": 5820033,
                            "type": "local",
                            "view": "EntityOwner"
                        },
                        {
                            "finish": 5820044,
                            "start": 5820040,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 5820047,
                            "start": 5820046,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 5820050,
                            "start": 5820049,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 5820060,
                            "start": 5820052,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "- can be nil",
                            "finish": 5820070,
                            "start": 5820062,
                            "type": "local",
                            "view": "Vec2?"
                        },
                        {
                            "finish": 5820080,
                            "start": 5820072,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "this is the initial entity_id created by server OR client. It's owner specific! Every",
                            "finish": 5820095,
                            "start": 5820082,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 5820103,
                            "start": 5820097,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 5820118,
                            "start": 5820105,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": " Spawns an entity and applies the transform and velocity to it. Also adds the network_component.\n\n@*param* `velocity` — - can be nil\n\n@*param* `localEntityId` — this is the initial entity_id created by server OR client. It's owner specific! Every\n\n owner has its own entity ids.\n\n@*return* `entityId` — Returns the entity_id of a already existing entity, found by nuid or the newly created entity.",
                    "finish": 6280003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": 5820000,
                    "type": "function",
                    "view": "function EntityUtils.spawnEntity(owner: EntityOwner, nuid: number, x: number, y: number, rotation: number, velocity?: Vec2, filename: string, localEntityId: number, health: any, isPolymorphed: any)\n  -> entityId: number?"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 5820032,
                "start": 5820009,
                "type": "setfield"
            }
        ],
        "desc": " Spawns an entity and applies the transform and velocity to it. Also adds the network_component.\n\n@*param* `velocity` — - can be nil\n\n@*param* `localEntityId` — this is the initial entity_id created by server OR client. It's owner specific! Every\n\n owner has its own entity ids.\n\n@*return* `entityId` — Returns the entity_id of a already existing entity, found by nuid or the newly created entity.",
        "name": "EntityUtils.spawnEntity",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": " Synchronises the dead nuids between server and client.",
                    "finish": 6410003,
                    "start": 6330000,
                    "type": "function",
                    "view": "function EntityUtils.syncDeadNuids()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 6330034,
                "start": 6330009,
                "type": "setfield"
            }
        ],
        "desc": " Synchronises the dead nuids between server and client.",
        "name": "EntityUtils.syncDeadNuids",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 19,
                "start": 10,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4100052,
                            "start": 4100032,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 4100067,
                            "start": 4100054,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": 4230003,
                    "start": 4100000,
                    "type": "function",
                    "view": "function FileUtils.AppendToFile(filenameAbsolutePath: string, appendContent: string)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 4100031,
                "name": "AppendToFile",
                "start": 4100009,
                "type": "setfield"
            },
            {
                "desc": "@*param* `archive_name` — server_save06_98-09-16_23:48:10 - without file extension (*.7z)\n\n@*param* `absolute_directory_path_to_add_archive` — C:\\Users\\Ismoh-PC\\AppData\\LocalLow\\Nolla_Games_Noita\\save06\n\n@*param* `absolute_destination_path` — C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita\\mods\noita-mp\\_\n\n@*return* `content` — binary content of archive",
                "extends": {
                    "args": [
                        {
                            "desc": "server_save06_98-09-16_23:48:10 - without file extension (*.7z)",
                            "finish": 5030049,
                            "start": 5030037,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "C:\\Users\\Ismoh-PC\\AppData\\LocalLow\\Nolla_Games_Noita\\save06",
                            "finish": 5030089,
                            "start": 5030051,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita\\mods\noita-mp\\_",
                            "finish": 5030116,
                            "start": 5030091,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `archive_name` — server_save06_98-09-16_23:48:10 - without file extension (*.7z)\n\n@*param* `absolute_directory_path_to_add_archive` — C:\\Users\\Ismoh-PC\\AppData\\LocalLow\\Nolla_Games_Noita\\save06\n\n@*param* `absolute_destination_path` — C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita\\mods\noita-mp\\_\n\n@*return* `content` — binary content of archive",
                    "finish": 5360003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|number"
                        }
                    ],
                    "start": 5030000,
                    "type": "function",
                    "view": "function FileUtils.Create7zipArchive(archive_name: string, absolute_directory_path_to_add_archive: string, absolute_destination_path: string)\n  -> content: string|number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 5030036,
                "name": "Create7zipArchive",
                "start": 5030009,
                "type": "setfield"
            },
            {
                "desc": " Checks if FILE or DIRECTORY exists\n\n@*param* `absolutePath` — full path",
                "extends": {
                    "args": [
                        {
                            "desc": "full path",
                            "finish": 2680038,
                            "start": 2680026,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": " Checks if FILE or DIRECTORY exists\n\n@*param* `absolutePath` — full path",
                    "finish": 2750003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2680000,
                    "type": "function",
                    "view": "function FileUtils.Exists(absolutePath: string)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 2680025,
                "name": "Exists",
                "start": 2680009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 4970003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 4910000,
                    "type": "function",
                    "view": "function FileUtils.Exists7zip()\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 4910029,
                "name": "Exists7zip",
                "start": 4910009,
                "type": "setfield"
            },
            {
                "desc": "@*param* `archive_absolute_directory_path` — path to archive location like \"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita\\mods\\noita-mp\\_\"\n\n@*param* `archive_name` — server_save06_98-09-16_23:48:10.7z - with file extension (*.7z)\n\n@*param* `extract_absolute_directory_path` — C:\\Users\\Ismoh-PC\\AppData\\LocalLow\\Nolla_Games_Noita",
                "extends": {
                    "args": [
                        {
                            "desc": "path to archive location like \"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita\\mods\\noita-mp\\_\"",
                            "finish": 5410069,
                            "start": 5410038,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "server_save06_98-09-16_23:48:10.7z - with file extension (*.7z)",
                            "finish": 5410083,
                            "start": 5410071,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "C:\\Users\\Ismoh-PC\\AppData\\LocalLow\\Nolla_Games_Noita",
                            "finish": 5410116,
                            "start": 5410085,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `archive_absolute_directory_path` — path to archive location like \"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita\\mods\\noita-mp\\_\"\n\n@*param* `archive_name` — server_save06_98-09-16_23:48:10.7z - with file extension (*.7z)\n\n@*param* `extract_absolute_directory_path` — C:\\Users\\Ismoh-PC\\AppData\\LocalLow\\Nolla_Games_Noita",
                    "finish": 5500003,
                    "start": 5410000,
                    "type": "function",
                    "view": "function FileUtils.Extract7zipArchive(archive_absolute_directory_path: string, archive_name: string, extract_absolute_directory_path: string)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 5410037,
                "name": "Extract7zipArchive",
                "start": 5410009,
                "type": "setfield"
            },
            {
                "desc": " Credits to dextercd!",
                "extends": {
                    "args": [],
                    "desc": " Credits to dextercd!",
                    "finish": 5610003,
                    "start": 5590000,
                    "type": "function",
                    "view": "function FileUtils.FestartNoita()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 5590031,
                "name": "FestartNoita",
                "start": 5590009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 4880003,
                    "start": 4690000,
                    "type": "function",
                    "view": "function FileUtils.Find7zipExecutable()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 4690037,
                "name": "Find7zipExecutable",
                "start": 4690009,
                "type": "setfield"
            },
            {
                "desc": " There is a world_state.xml per each saveSlot directory, which contains Globals. Nuid are stored in Globals.\n\n@*param* `saveSlotAbsDirectoryPath` — Absolute directory path to the current selected save slot.\n\n@*return* `absPath` — world_state.xml absolute file path",
                "extends": {
                    "args": [
                        {
                            "desc": "Absolute directory path to the current selected save slot.",
                            "finish": 2310072,
                            "start": 2310048,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": " There is a world_state.xml per each saveSlot directory, which contains Globals. Nuid are stored in Globals.\n\n@*param* `saveSlotAbsDirectoryPath` — Absolute directory path to the current selected save slot.\n\n@*return* `absPath` — world_state.xml absolute file path",
                    "finish": 2330003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2310000,
                    "type": "function",
                    "view": "function FileUtils.GetAbsDirPathOfWorldStateXml(saveSlotAbsDirectoryPath: string)\n  -> absPath: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 2310047,
                "name": "GetAbsDirPathOfWorldStateXml",
                "start": 2310009,
                "type": "setfield"
            },
            {
                "desc": " Returns the ABSOLUTE path of the mods folder.\n If fu.GetAbsolutePathOfNoitaRootDirectory() is not set yet, then it will be\n\n@*return* `fu.GetAbsolutePathOfNoitaRootDirectory` — ) .. \"/mods/noita-mp\"",
                "extends": {
                    "args": [],
                    "desc": " Returns the ABSOLUTE path of the mods folder.\n If fu.GetAbsolutePathOfNoitaRootDirectory() is not set yet, then it will be\n\n@*return* `fu.GetAbsolutePathOfNoitaRootDirectory` — ) .. \"/mods/noita-mp\"",
                    "finish": 1980003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1910000,
                    "type": "function",
                    "view": "function FileUtils.GetAbsoluteDirectoryPathOfNoitaMP()\n  -> fu.GetAbsolutePathOfNoitaRootDirectory: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 1910052,
                "name": "GetAbsoluteDirectoryPathOfNoitaMP",
                "start": 1910009,
                "type": "setfield"
            },
            {
                "desc": " Return the parent directory of the savegame directory save06.\n If DebugGetIsDevBuild() then Noitas installation path is returned: 'C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita'\n otherwise it will return: '%appdata%\\..\\LocalLow\\Nolla_Games_Noita' on windows\n\n@*return* `save06_parent_directory_path` — string of absolute path to '..\\Noita' or '..\\Nolla_Games_Noita'",
                "extends": {
                    "args": [],
                    "desc": " Return the parent directory of the savegame directory save06.\n If DebugGetIsDevBuild() then Noitas installation path is returned: 'C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita'\n otherwise it will return: '%appdata%\\..\\LocalLow\\Nolla_Games_Noita' on windows\n\n@*return* `save06_parent_directory_path` — string of absolute path to '..\\Noita' or '..\\Nolla_Games_Noita'",
                    "finish": 1790003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1370000,
                    "type": "function",
                    "view": "function FileUtils.GetAbsoluteDirectoryPathOfParentSave()\n  -> save06_parent_directory_path: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 1370055,
                "name": "GetAbsoluteDirectoryPathOfParentSave",
                "start": 1370009,
                "type": "setfield"
            },
            {
                "desc": " Returns the ABSOLUTE path of the library folder required for this mod.\n If fu.GetAbsolutePathOfNoitaRootDirectory() is not set yet, then it will be\n\n@*return* `fu.GetAbsolutePathOfNoitaRootDirectory` — ) .. \"/mods/noita-mp/files/libs\"",
                "extends": {
                    "args": [],
                    "desc": " Returns the ABSOLUTE path of the library folder required for this mod.\n If fu.GetAbsolutePathOfNoitaRootDirectory() is not set yet, then it will be\n\n@*return* `fu.GetAbsolutePathOfNoitaRootDirectory` — ) .. \"/mods/noita-mp/files/libs\"",
                    "finish": 2260003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2190000,
                    "type": "function",
                    "view": "function FileUtils.GetAbsoluteDirectoryPathOfRequiredLibs()\n  -> fu.GetAbsolutePathOfNoitaRootDirectory: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 2190057,
                "name": "GetAbsoluteDirectoryPathOfRequiredLibs",
                "start": 2190009,
                "type": "setfield"
            },
            {
                "desc": " Returns fullpath of save06 directory on devBuild or release\n\n@*return* `directory_path_of_save06` — : noita installation path\\save06 or %appdata%\\..\\LocalLow\\Nolla_Games_Noita\\save06 on windows and unknown for unix systems",
                "extends": {
                    "args": [],
                    "desc": " Returns fullpath of save06 directory on devBuild or release\n\n@*return* `directory_path_of_save06` — : noita installation path\\save06 or %appdata%\\..\\LocalLow\\Nolla_Games_Noita\\save06 on windows and unknown for unix systems",
                    "finish": 1860003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1830000,
                    "type": "function",
                    "view": "function FileUtils.GetAbsoluteDirectoryPathOfSave06()\n  -> directory_path_of_save06: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 1830051,
                "name": "GetAbsoluteDirectoryPathOfSave06",
                "start": 1830009,
                "type": "setfield"
            },
            {
                "desc": " Returns absolute path of NoitaMP settings directory,\n\n@*return* `absPath` — i.e. \"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita\\mods\\noita-mp\\settings\"",
                "extends": {
                    "args": [],
                    "desc": " Returns absolute path of NoitaMP settings directory,\n\n@*return* `absPath` — i.e. \"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita\\mods\\noita-mp\\settings\"",
                    "finish": 2590003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2570000,
                    "type": "function",
                    "view": "function FileUtils.GetAbsolutePathOfNoitaMpSettingsDirectory()\n  -> absPath: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 2570060,
                "name": "GetAbsolutePathOfNoitaMpSettingsDirectory",
                "start": 2570009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 1270003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1220000,
                    "type": "function",
                    "view": "function FileUtils.GetAbsolutePathOfNoitaRootDirectory()\n  -> string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 1220054,
                "name": "GetAbsolutePathOfNoitaRootDirectory",
                "start": 1220009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6050051,
                            "start": 6050042,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 6050066,
                            "start": 6050053,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 6220003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 6050000,
                    "type": "function",
                    "view": "function FileUtils.GetAllFilesInDirectory(directory: any, fileExtension: any)\n  -> table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 6050041,
                "name": "GetAllFilesInDirectory",
                "start": 6050009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 6370003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|table"
                        }
                    ],
                    "start": 6240000,
                    "type": "function",
                    "view": "function FileUtils.GetDesktopDirectory()\n  -> string|table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 6240038,
                "name": "GetDesktopDirectory",
                "start": 6240009,
                "type": "setfield"
            },
            {
                "desc": " see _G.saveSlotMeta",
                "extends": {
                    "args": [],
                    "desc": " see _G.saveSlotMeta",
                    "finish": 2530003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 2370000,
                    "type": "function",
                    "view": "function FileUtils.GetLastModifiedSaveSlots()\n  -> table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 2370043,
                "name": "GetLastModifiedSaveSlots",
                "start": 2370009,
                "type": "setfield"
            },
            {
                "desc": "\n eNet specific commands",
                "extends": {
                    "args": [],
                    "desc": "\n eNet specific commands",
                    "finish": 790003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": 640000,
                    "type": "function",
                    "view": "function FileUtils.GetPidOfRunningEnetHostByPort()\n  -> number?"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 640048,
                "name": "GetPidOfRunningEnetHostByPort",
                "start": 640009,
                "type": "setfield"
            },
            {
                "desc": " Returns the RELATIVE path of the mods folder.\n\n@*return* — mods/noita-mp",
                "extends": {
                    "args": [],
                    "desc": " Returns the RELATIVE path of the mods folder.\n\n@*return* — mods/noita-mp",
                    "finish": 2060003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2020000,
                    "type": "function",
                    "view": "function FileUtils.GetRelativeDirectoryPathOfNoitaMP()\n  -> string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 2020052,
                "name": "GetRelativeDirectoryPathOfNoitaMP",
                "start": 2020009,
                "type": "setfield"
            },
            {
                "desc": " Returns the RELATIVE path of the library folder required for this mod.\n\n@*return* — /mods/noita-mp/files/libs",
                "extends": {
                    "args": [],
                    "desc": " Returns the RELATIVE path of the library folder required for this mod.\n\n@*return* — /mods/noita-mp/files/libs",
                    "finish": 2140003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2100000,
                    "type": "function",
                    "view": "function FileUtils.GetRelativeDirectoryPathOfRequiredLibs()\n  -> string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 2100057,
                "name": "GetRelativeDirectoryPathOfRequiredLibs",
                "start": 2100009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 200003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 90000,
                    "type": "function",
                    "view": "function FileUtils.GetVersionByFile()\n  -> string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 90035,
                "name": "GetVersionByFile",
                "start": 90009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2980040,
                            "start": 2980031,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": 3080003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2980000,
                    "type": "function",
                    "view": "function FileUtils.IsDirectory(full_path: string)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 2980030,
                "name": "IsDirectory",
                "start": 2980009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2790035,
                            "start": 2790026,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": 2940003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2790000,
                    "type": "function",
                    "view": "function FileUtils.IsFile(full_path: string)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 2790025,
                "name": "IsFile",
                "start": 2790009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 5740003,
                    "start": 5630000,
                    "type": "function",
                    "view": "function FileUtils.KillNoitaAndRestart()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 5630038,
                "name": "KillNoitaAndRestart",
                "start": 5630009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 810034,
                            "start": 810031,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 900003,
                    "start": 810000,
                    "type": "function",
                    "view": "function FileUtils.KillProcess(pid: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 810030,
                "name": "KillProcess",
                "start": 810009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3920034,
                            "start": 3920025,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": 4060003,
                    "start": 3920000,
                    "type": "function",
                    "view": "function FileUtils.MkDir(full_path: string)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 3920024,
                "name": "MkDir",
                "start": 3920009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3120047,
                            "start": 3120034,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": 3250003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|number"
                        }
                    ],
                    "start": 3120000,
                    "type": "function",
                    "view": "function FileUtils.ReadBinaryFile(file_fullpath: string)\n  -> string|number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 3120033,
                "name": "ReadBinaryFile",
                "start": 3120009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3430041,
                            "start": 3430028,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 3430047,
                            "start": 3430043,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "finish": 3600003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 3430000,
                    "type": "function",
                    "view": "function FileUtils.ReadFile(file_fullpath: string, mode?: string)\n  -> unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 3430027,
                "name": "ReadFile",
                "start": 3430009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4540056,
                            "start": 4540044,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 4630003,
                    "start": 4540000,
                    "type": "function",
                    "view": "function FileUtils.RemoveContentOfDirectory(absolutePath: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 4540043,
                "name": "RemoveContentOfDirectory",
                "start": 4540009,
                "type": "setfield"
            },
            {
                "desc": " Removes trailing path separator in a string: \\persistent\\flags\\ -> \\persistent\\flags.\n Error if path is not a string.\n\n@*param* `path` — any string, i.e. \\persistent\\flags\\\n\n@*return* `path` — \\persistent\\flags",
                "extends": {
                    "args": [
                        {
                            "desc": "any string, i.e. \\persistent\\flags\\",
                            "finish": 500051,
                            "start": 500047,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": " Removes trailing path separator in a string: \\persistent\\flags\\ -> \\persistent\\flags.\n Error if path is not a string.\n\n@*param* `path` — any string, i.e. \\persistent\\flags\\\n\n@*return* `path` — \\persistent\\flags",
                    "finish": 580003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 500000,
                    "type": "function",
                    "view": "function FileUtils.RemoveTrailingPathSeparator(path: string)\n  -> path: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 500046,
                "name": "RemoveTrailingPathSeparator",
                "start": 500009,
                "type": "setfield"
            },
            {
                "desc": " Replaces windows path separator to unix path separator and vice versa.\n Error if path is not a string.",
                "extends": {
                    "args": [
                        {
                            "finish": 300044,
                            "start": 300040,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": " Replaces windows path separator to unix path separator and vice versa.\n Error if path is not a string.",
                    "finish": 440003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 300000,
                    "type": "function",
                    "view": "function FileUtils.ReplacePathSeparator(path: string)\n  -> path: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 300039,
                "name": "ReplacePathSeparator",
                "start": 300009,
                "type": "setfield"
            },
            {
                "desc": " This executes c code to sent SDL_QUIT command to the app",
                "extends": {
                    "args": [],
                    "desc": " This executes c code to sent SDL_QUIT command to the app",
                    "finish": 6030003,
                    "start": 5770000,
                    "type": "function",
                    "view": "function FileUtils.SaveAndRestartNoita()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 5770038,
                "name": "SaveAndRestartNoita",
                "start": 5770009,
                "type": "setfield"
            },
            {
                "desc": " Lua implementation of PHP scandir function",
                "extends": {
                    "args": [
                        {
                            "finish": 4360036,
                            "start": 4360027,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": " Lua implementation of PHP scandir function",
                    "finish": 4520003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string[]"
                        }
                    ],
                    "start": 4360000,
                    "type": "function",
                    "view": "function FileUtils.ScanDir(directory: any)\n  -> string[]"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 4360026,
                "name": "ScanDir",
                "start": 4360009,
                "type": "setfield"
            },
            {
                "desc": " Sets root directory of noita.exe, i.e. C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita",
                "extends": {
                    "args": [],
                    "desc": " Sets root directory of noita.exe, i.e. C:\\Program Files (x86)\\Steam\\steamapps\\common\\Noita",
                    "finish": 1190003,
                    "start": 970000,
                    "type": "function",
                    "view": "function FileUtils.SetAbsolutePathOfNoitaRootDirectory()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 970054,
                "name": "SetAbsolutePathOfNoitaRootDirectory",
                "start": 970009,
                "type": "setfield"
            },
            {
                "desc": " http://lua-users.org/wiki/SplitJoin -> Example: Split a file path string into components.",
                "extends": {
                    "args": [
                        {
                            "finish": 4280032,
                            "start": 4280029,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": " http://lua-users.org/wiki/SplitJoin -> Example: Split a file path string into components.",
                    "finish": 4320003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 4280000,
                    "type": "function",
                    "view": "function FileUtils.SplitPath(str: any)\n  -> unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 4280028,
                "name": "SplitPath",
                "start": 4280009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3290048,
                            "start": 3290035,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 3290062,
                            "start": 3290050,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 3390003,
                    "start": 3290000,
                    "type": "function",
                    "view": "function FileUtils.WriteBinaryFile(file_fullpath: string, file_content: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 3290034,
                "name": "WriteBinaryFile",
                "start": 3290009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3640042,
                            "start": 3640029,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 3640056,
                            "start": 3640044,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": 3890003,
                    "start": 3640000,
                    "type": "function",
                    "view": "function FileUtils.WriteFile(file_fullpath: string, file_content: string)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 3640028,
                "name": "WriteFile",
                "start": 3640009,
                "type": "setfield"
            }
        ],
        "name": "FileUtils",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": " Returns width and height depending on resolution.\n GuiGetScreenDimensions( gui:obj ) -> width:number,height:number [Returns dimensions of viewport in the gui coordinate system (which is equal to the coordinates of the screen bottom right corner in gui coordinates). The values returned may change depending on the game resolution because the UI is scaled for pixel-perfect text rendering.]",
                    "finish": 300003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 240000,
                    "type": "function",
                    "view": "function GetWidthAndHeightByResolution()\n  -> width: number\n  2. height: number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/Ui.lua",
                "finish": 240038,
                "start": 240009,
                "type": "setglobal"
            }
        ],
        "desc": " Returns width and height depending on resolution.\n GuiGetScreenDimensions( gui:obj ) -> width:number,height:number [Returns dimensions of viewport in the gui coordinate system (which is equal to the coordinates of the screen bottom right corner in gui coordinates). The values returned may change depending on the game resolution because the UI is scaled for pixel-perfect text rendering.]",
        "name": "GetWidthAndHeightByResolution",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 40087,
                    "start": 40023,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/nuid_updater.lua",
                "finish": 40012,
                "start": 40000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 380036,
                    "start": 380034,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 380012,
                "start": 380000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 1550030,
                    "start": 1550018,
                    "type": "getglobal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 1550015,
                "start": 1550000,
                "type": "setfield"
            }
        ],
        "desc": " GlobalsUtils:\n class for GlobalsSetValue and GlobalsGetValue",
        "name": "GlobalsUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 450045,
                    "start": 450034,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 450025,
                "start": 450000,
                "type": "setfield"
            }
        ],
        "name": "GlobalsUtils.deadNuidsKey",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1220003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 1120000,
                    "type": "function",
                    "view": "function GlobalsUtils.getDeadNuids()\n  -> table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 1120034,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "name": "GlobalsUtils.getDeadNuids",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1440044,
                            "start": 1440040,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Builds a key string by nuid and returns nuid and entityId found by the globals.",
                    "finish": 1510003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "number|nil"
                        }
                    ],
                    "start": 1440000,
                    "type": "function",
                    "view": "function GlobalsUtils.getNuidEntityPair(nuid: number)\n  -> nuid: number|nil\n  2. entityId: number|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 1440039,
                "start": 1440009,
                "type": "setfield"
            }
        ],
        "desc": " Builds a key string by nuid and returns nuid and entityId found by the globals.",
        "name": "GlobalsUtils.getNuidEntityPair",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 410045,
                    "start": 410034,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 410026,
                "start": 410000,
                "type": "setfield"
            }
        ],
        "desc": " key for nuid",
        "name": "GlobalsUtils.nuidKeyFormat",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 420043,
                    "start": 420034,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 420029,
                "start": 420000,
                "type": "setfield"
            }
        ],
        "name": "GlobalsUtils.nuidKeySubstring",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 430049,
                    "start": 430034,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 430028,
                "start": 430000,
                "type": "setfield"
            }
        ],
        "name": "GlobalsUtils.nuidValueFormat",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 440047,
                    "start": 440034,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 440031,
                "start": 440000,
                "type": "setfield"
            }
        ],
        "name": "GlobalsUtils.nuidValueSubstring",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "GlobalsUtils.nuidKeyFormat = \"nuid = %s\"",
                            "finish": 520059,
                            "start": 520053,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "GlobalsUtils.nuidValueFormat = \"entityId = %s\"",
                            "finish": 520069,
                            "start": 520061,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": " Parses key and value string to nuid and entityId.\n\n@*param* `xmlKey` — GlobalsUtils.nuidKeyFormat = \"nuid = %s\"\n\n@*param* `xmlValue` — GlobalsUtils.nuidValueFormat = \"entityId = %s\"",
                    "finish": 920003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "number|nil"
                        }
                    ],
                    "start": 520000,
                    "type": "function",
                    "view": "function GlobalsUtils.parseXmlValueToNuidAndEntityId(xmlKey: string, xmlValue: string)\n  -> nuid: number|nil\n  2. entityId: number|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 520052,
                "start": 520009,
                "type": "setfield"
            }
        ],
        "desc": " Parses key and value string to nuid and entityId.\n\n@*param* `xmlKey` — GlobalsUtils.nuidKeyFormat = \"nuid = %s\"\n\n@*param* `xmlValue` — GlobalsUtils.nuidValueFormat = \"entityId = %s\"",
        "name": "GlobalsUtils.parseXmlValueToNuidAndEntityId",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1240041,
                            "start": 1240037,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1390003,
                    "start": 1240000,
                    "type": "function",
                    "view": "function GlobalsUtils.removeDeadNuid(nuid: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 1240036,
                "start": 1240009,
                "type": "setfield"
            }
        ],
        "name": "GlobalsUtils.removeDeadNuid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1010038,
                            "start": 1010034,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1100003,
                    "start": 1010000,
                    "type": "function",
                    "view": "function GlobalsUtils.setDeadNuid(nuid: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 1010033,
                "start": 1010009,
                "type": "setfield"
            }
        ],
        "name": "GlobalsUtils.setDeadNuid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 940034,
                            "start": 940030,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 940044,
                            "start": 940036,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 940069,
                            "start": 940046,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 940094,
                            "start": 940071,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 940114,
                            "start": 940096,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 990003,
                    "start": 940000,
                    "type": "function",
                    "view": "function GlobalsUtils.setNuid(nuid: any, entityId: any, componentIdForOwnerName: any, componentIdForOwnerGuid: any, componentIdForNuid: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GlobalsUtils.lua",
                "finish": 940029,
                "start": 940009,
                "type": "setfield"
            }
        ],
        "name": "GlobalsUtils.setNuid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1280024,
                    "start": 1280015,
                    "type": "getlocal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GuidUtils.lua",
                "finish": 1280012,
                "start": 1280000,
                "type": "setfield"
            }
        ],
        "desc": " Because of stack overflow errors when loading lua files,\n I decided to put Utils 'classes' into globals",
        "name": "GuidUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NoitaComponentUtils.lua",
                "finish": 510020,
                "start": 510014,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "extends": {
                    "finish": 520028,
                    "start": 520022,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 520028,
                            "start": 520022,
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NoitaComponentUtils.lua",
                "finish": 520028,
                "name": "current",
                "start": 520014,
                "type": "doc.field"
            },
            {
                "extends": {
                    "finish": 530024,
                    "start": 530018,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 530024,
                            "start": 530018,
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NoitaComponentUtils.lua",
                "finish": 530024,
                "name": "max",
                "start": 530014,
                "type": "doc.field"
            }
        ],
        "name": "Health",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 40078,
                    "start": 40020,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_logger.lua",
                "finish": 40017,
                "start": 40008,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 170020,
                    "start": 170018,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Logger.lua",
                "finish": 170006,
                "start": 170000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 1270018,
                    "start": 1270012,
                    "type": "getglobal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Logger.lua",
                "finish": 1270009,
                "start": 1270000,
                "type": "setfield"
            }
        ],
        "desc": " Class for being able to log per level",
        "name": "Logger",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 390001,
                    "start": 270018,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Logger.lua",
                "finish": 270015,
                "start": 270000,
                "type": "setfield"
            }
        ],
        "name": "Logger.channels",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1110029,
                            "start": 1110022,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1110047,
                            "start": 1110031,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1130003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1110000,
                    "type": "function",
                    "view": "function Logger.debug(channel: any, formattedMessage: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Logger.lua",
                "finish": 1110021,
                "start": 1110009,
                "type": "setfield"
            }
        ],
        "name": "Logger.debug",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1150028,
                            "start": 1150021,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1150046,
                            "start": 1150030,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1170003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1150000,
                    "type": "function",
                    "view": "function Logger.info(channel: any, formattedMessage: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Logger.lua",
                "finish": 1150020,
                "start": 1150009,
                "type": "setfield"
            }
        ],
        "name": "Logger.info",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 250001,
                    "start": 190018,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Logger.lua",
                "finish": 190012,
                "start": 190000,
                "type": "setfield"
            }
        ],
        "name": "Logger.level",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Possible values = off, trace, debug, info, warn",
                            "finish": 470025,
                            "start": 470020,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Defined in Logger.channels.",
                            "finish": 470034,
                            "start": 470027,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Message text to `print()`. Use `Logger.log(\"debug\", Logger.channels.entity, (\"Debug message with string directive %s. Yay!\"):format(\"FooBar\"))`",
                            "finish": 470043,
                            "start": 470036,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": " Main function for logging, which simply uses `print()`.\n By the way, if you want to log error, simply use `error()`.\n\n@*param* `level` — Possible values = off, trace, debug, info, warn\n\n@*param* `channel` — Defined in Logger.channels.\n\n@*param* `message` — Message text to `print()`. Use `Logger.log(\"debug\", Logger.channels.entity, (\"Debug message with string directive %s. Yay!\"):format(\"FooBar\"))`\n\n@*return* `true` — if logged, false if not logged",
                    "finish": 1040003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 470000,
                    "type": "function",
                    "view": "function Logger.log(level: string, channel: string, message: string)\n  -> true: boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Logger.lua",
                "finish": 470019,
                "start": 470009,
                "type": "setfield"
            }
        ],
        "desc": " Main function for logging, which simply uses `print()`.\n By the way, if you want to log error, simply use `error()`.\n\n@*param* `level` — Possible values = off, trace, debug, info, warn\n\n@*param* `channel` — Defined in Logger.channels.\n\n@*param* `message` — Message text to `print()`. Use `Logger.log(\"debug\", Logger.channels.entity, (\"Debug message with string directive %s. Yay!\"):format(\"FooBar\"))`\n\n@*return* `true` — if logged, false if not logged",
        "name": "Logger.log",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1060029,
                            "start": 1060022,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1060047,
                            "start": 1060031,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1080003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1060000,
                    "type": "function",
                    "view": "function Logger.trace(channel: any, formattedMessage: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Logger.lua",
                "finish": 1060021,
                "start": 1060009,
                "type": "setfield"
            }
        ],
        "name": "Logger.trace",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1190028,
                            "start": 1190021,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1190046,
                            "start": 1190030,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1210003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1190000,
                    "type": "function",
                    "view": "function Logger.warn(channel: any, formattedMessage: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Logger.lua",
                "finish": 1190020,
                "start": 1190009,
                "type": "setfield"
            }
        ],
        "name": "Logger.warn",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 1230029,
                "start": 1230014,
                "type": "doc.class"
            }
        ],
        "fields": [],
        "name": "MinaInformation",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1390005,
                    "start": 1260022,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 1260019,
                "start": 1260004,
                "type": "setglobal"
            }
        ],
        "desc": "See:\n  * [Transform](file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua#117#18)\n  * [Health](file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NoitaComponentUtils.lua#52#14)",
        "name": "MinaInformation",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 10019,
                "start": 10010,
                "type": "doc.class"
            }
        ],
        "desc": "Util class for fetching information about local and remote minas.",
        "fields": [
            {
                "desc": "Getter for local mina entity id. It also takes care of polymorphism!\n\n@*return* `localMinaEntityId` — or nil if not found/dead",
                "extends": {
                    "args": [],
                    "desc": "Getter for local mina entity id. It also takes care of polymorphism!\n\n@*return* `localMinaEntityId` — or nil if not found/dead",
                    "finish": 710003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number|nil"
                        }
                    ],
                    "start": 410000,
                    "type": "function",
                    "view": "function MinaUtils.getLocalMinaEntityId()\n  -> localMinaEntityId: number|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 410039,
                "name": "getLocalMinaEntityId",
                "start": 410009,
                "type": "setfield"
            },
            {
                "desc": "Getter for local mina guid. ~It also loads it from settings file.~",
                "extends": {
                    "args": [],
                    "desc": "Getter for local mina guid. ~It also loads it from settings file.~",
                    "finish": 370003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 320000,
                    "type": "function",
                    "view": "function MinaUtils.getLocalMinaGuid()\n  -> localMinaGuid: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 320035,
                "name": "getLocalMinaGuid",
                "start": 320009,
                "type": "setfield"
            },
            {
                "desc": "Getter for local mina information. It also takes care of polymorphism!\nSee: [MinaInformation](file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua#124#14)",
                "extends": {
                    "args": [],
                    "desc": "Getter for local mina information. It also takes care of polymorphism!\nSee: [MinaInformation](file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua#124#14)",
                    "finish": 1410003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "MinaInformation"
                        }
                    ],
                    "start": 760000,
                    "type": "function",
                    "view": "function MinaUtils.getLocalMinaInformation()\n  -> localMinaInformation: MinaInformation"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 760042,
                "name": "getLocalMinaInformation",
                "start": 760009,
                "type": "setfield"
            },
            {
                "desc": "Getter for local mina name. ~It also loads it from settings file.~",
                "extends": {
                    "args": [],
                    "desc": "Getter for local mina name. ~It also loads it from settings file.~",
                    "finish": 210003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 160000,
                    "type": "function",
                    "view": "function MinaUtils.getLocalMinaName()\n  -> localMinaName: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 160035,
                "name": "getLocalMinaName",
                "start": 160009,
                "type": "setfield"
            },
            {
                "desc": "Checks if local mina is polymorphed. Returns true, entityId | false, nil",
                "extends": {
                    "args": [],
                    "desc": "Checks if local mina is polymorphed. Returns true, entityId | false, nil",
                    "finish": 1700003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "number|nil"
                        }
                    ],
                    "start": 1450000,
                    "type": "function",
                    "view": "function MinaUtils.isLocalMinaPolymorphed()\n  -> isPolymorphed: boolean\n  2. entityId: number|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 1450041,
                "name": "isLocalMinaPolymorphed",
                "start": 1450009,
                "type": "setfield"
            },
            {
                "desc": "Setter for local mina guid. It also saves it to settings file.",
                "extends": {
                    "args": [
                        {
                            "finish": 250040,
                            "start": 250036,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Setter for local mina guid. It also saves it to settings file.",
                    "finish": 280003,
                    "start": 250000,
                    "type": "function",
                    "view": "function MinaUtils.setLocalMinaGuid(guid: string)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 250035,
                "name": "setLocalMinaGuid",
                "start": 250009,
                "type": "setfield"
            },
            {
                "desc": "Setter for local mina name. It also saves it to settings file.",
                "extends": {
                    "args": [
                        {
                            "finish": 90040,
                            "start": 90036,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Setter for local mina name. It also saves it to settings file.",
                    "finish": 120003,
                    "start": 90000,
                    "type": "function",
                    "view": "function MinaUtils.setLocalMinaName(name: string)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 90035,
                "name": "setLocalMinaName",
                "start": 90009,
                "type": "setfield"
            }
        ],
        "name": "MinaUtils",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1740024,
                    "start": 1740015,
                    "type": "getlocal",
                    "view": "MinaUtils"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 1740012,
                "start": 1740000,
                "type": "setfield"
            }
        ],
        "desc": "Util class for fetching information about local and remote minas.",
        "name": "MinaUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 180029,
                    "start": 180027,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 180012,
                "start": 180000,
                "type": "setglobal"
            }
        ],
        "name": "NetworkCache",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 190023,
                    "start": 190021,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 190018,
                "start": 190000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 920031,
                    "start": 920029,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 920026,
                "start": 920008,
                "type": "setfield"
            }
        ],
        "name": "NetworkCache.cache",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1770049,
                            "start": 1770036,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1820003,
                    "start": 1770027,
                    "type": "function",
                    "view": "function NetworkCache.clear(clientCacheId: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 1770018,
                "start": 1770000,
                "type": "setfield"
            }
        ],
        "name": "NetworkCache.clear",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 710049,
                            "start": 710036,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 710056,
                            "start": 710051,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 710074,
                            "start": 710058,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1140003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown|nil"
                        }
                    ],
                    "start": 710027,
                    "type": "function",
                    "view": "function NetworkCache.get(clientCacheId: any, event: any, networkMessageId: any)\n  -> unknown|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 710016,
                "start": 710000,
                "type": "setfield"
            }
        ],
        "name": "NetworkCache.get",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1750003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table|unknown"
                        }
                    ],
                    "start": 1700027,
                    "type": "function",
                    "view": "function NetworkCache.getAll()\n  -> table|unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 1700019,
                "start": 1700000,
                "type": "setfield"
            }
        ],
        "name": "NetworkCache.getAll",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1160049,
                            "start": 1160036,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1160063,
                            "start": 1160051,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1540003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown|nil"
                        }
                    ],
                    "start": 1160027,
                    "type": "function",
                    "view": "function NetworkCache.getChecksum(clientCacheId: any, dataChecksum: any)\n  -> unknown|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 1160024,
                "start": 1160000,
                "type": "setfield"
            }
        ],
        "name": "NetworkCache.getChecksum",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 210049,
                            "start": 210036,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 210067,
                            "start": 210051,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 210074,
                            "start": 210069,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 210082,
                            "start": 210076,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 210091,
                            "start": 210084,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 210099,
                            "start": 210093,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 210113,
                            "start": 210101,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 690003,
                    "start": 210027,
                    "type": "function",
                    "view": "function NetworkCache.set(clientCacheId: any, networkMessageId: any, event: any, status: any, ackedAt: any, sendAt: any, dataChecksum: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 210016,
                "start": 210000,
                "type": "setfield"
            }
        ],
        "name": "NetworkCache.set",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1610003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer|unknown"
                        }
                    ],
                    "start": 1560027,
                    "type": "function",
                    "view": "function NetworkCache.size()\n  -> integer|unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 1560017,
                "start": 1560000,
                "type": "setfield"
            }
        ],
        "name": "NetworkCache.size",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1680003,
                    "start": 1630021,
                    "type": "function",
                    "view": "function NetworkCache.usage()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 1630018,
                "start": 1630000,
                "type": "setfield"
            }
        ],
        "name": "NetworkCache.usage",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 200027,
                    "start": 200022,
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 200019,
                "start": 200000,
                "type": "setfield"
            }
        ],
        "desc": " not _G.disableLuaExtensionsDLL",
        "name": "NetworkCache.usingC",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1870029,
                    "start": 1870027,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 1870017,
                "start": 1870000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 4170044,
                    "start": 4170027,
                    "type": "getglobal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 4170020,
                "start": 4170000,
                "type": "setfield"
            }
        ],
        "desc": " Because of stack overflow errors when loading lua files,\n I decided to put Utils 'classes' into globals",
        "name": "NetworkCacheUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3630044,
                            "start": 3630036,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3630062,
                            "start": 3630046,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3630069,
                            "start": 3630064,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3630077,
                            "start": 3630071,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3630086,
                            "start": 3630079,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3630094,
                            "start": 3630088,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3630104,
                            "start": 3630096,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 4000003,
                    "start": 3630027,
                    "type": "function",
                    "view": "function NetworkCacheUtils.ack(peerGuid: any, networkMessageId: any, event: any, status: any, ackedAt: any, sendAt: any, checksum: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 3630021,
                "start": 3630000,
                "type": "setfield"
            }
        ],
        "name": "NetworkCacheUtils.ack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3000039,
                            "start": 3000031,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3000057,
                            "start": 3000041,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3000064,
                            "start": 3000059,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "@*return* `data` — { ackedAt, dataChecksum, event, messageId, sendAt, status}",
                    "finish": 3330003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 3000000,
                    "type": "function",
                    "view": "function NetworkCacheUtils.get(peerGuid: any, networkMessageId: any, event: any)\n  -> data: table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 3000030,
                "start": 3000009,
                "type": "setfield"
            }
        ],
        "desc": "@*return* `data` — { ackedAt, dataChecksum, event, messageId, sendAt, status}",
        "name": "NetworkCacheUtils.get",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3360049,
                            "start": 3360041,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3360056,
                            "start": 3360051,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3360062,
                            "start": 3360058,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "@*return* `cacheData` — { ackedAt, dataChecksum, event, messageId, sendAt, status}",
                    "finish": 3610003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 3360000,
                    "type": "function",
                    "view": "function NetworkCacheUtils.getByChecksum(peerGuid: any, event: any, data: any)\n  -> cacheData: table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 3360040,
                "start": 3360009,
                "type": "setfield"
            }
        ],
        "desc": "@*return* `cacheData` — { ackedAt, dataChecksum, event, messageId, sendAt, status}",
        "name": "NetworkCacheUtils.getByChecksum",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1890039,
                            "start": 1890034,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1890045,
                            "start": 1890041,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 2290003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1890000,
                    "type": "function",
                    "view": "function NetworkCacheUtils.getSum(event: any, data: any)\n  -> string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 1890033,
                "start": 1890009,
                "type": "setfield"
            }
        ],
        "name": "NetworkCacheUtils.getSum",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 4130003,
                    "start": 4020027,
                    "type": "function",
                    "view": "function NetworkCacheUtils.logAll()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 4020024,
                "start": 4020000,
                "type": "setfield"
            }
        ],
        "name": "NetworkCacheUtils.logAll",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "peer.guid",
                            "finish": 2350039,
                            "start": 2350031,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 2350057,
                            "start": 2350041,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 2350064,
                            "start": 2350059,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2350072,
                            "start": 2350066,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2350081,
                            "start": 2350074,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2350089,
                            "start": 2350083,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2350095,
                            "start": 2350091,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": " Manipulates parameters to use Cache-CAPI.\n\n@*param* `peerGuid` — peer.guid",
                    "finish": 2970003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2350000,
                    "type": "function",
                    "view": "function NetworkCacheUtils.set(peerGuid: string, networkMessageId: number, event: any, status: any, ackedAt: any, sendAt: any, data: any)\n  -> string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkCacheUtils.lua",
                "finish": 2350030,
                "start": 2350009,
                "type": "setfield"
            }
        ],
        "desc": " Manipulates parameters to use Cache-CAPI.\n\n@*param* `peerGuid` — peer.guid",
        "name": "NetworkCacheUtils.set",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 130041,
                    "start": 130039,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkUtils.lua",
                "finish": 130012,
                "start": 130000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 2630030,
                    "start": 2630018,
                    "type": "getglobal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkUtils.lua",
                "finish": 2630015,
                "start": 2630000,
                "type": "setfield"
            }
        ],
        "desc": " Because of stack overflow errors when loading lua files,\n I decided to put Utils 'classes' into globals",
        "name": "NetworkUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "If Server, then it's the peer, if Client, then it's the 'self' object",
                            "finish": 1810038,
                            "start": 1810034,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 1810045,
                            "start": 1810040,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1810051,
                            "start": 1810047,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": " Checks if the event within its data was already sent\n\n@*param* `peer` — If Server, then it's the peer, if Client, then it's the 'self' object",
                    "finish": 2410003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1810000,
                    "type": "function",
                    "view": "function NetworkUtils.alreadySent(peer: table, event: string, data: table)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkUtils.lua",
                "finish": 1810033,
                "start": 1810009,
                "type": "setfield"
            }
        ],
        "desc": " Checks if the event within its data was already sent\n\n@*param* `peer` — If Server, then it's the peer, if Client, then it's the 'self' object",
        "name": "NetworkUtils.alreadySent",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1350001,
                    "start": 170039,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkUtils.lua",
                "finish": 170019,
                "start": 170000,
                "type": "setfield"
            }
        ],
        "name": "NetworkUtils.events",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": " Sometimes you don't care if it's the client or server, but you need one of them to send the messages.\n\n@*return* `Client` — or Server 'object'",
                    "finish": 1670003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Client|Server"
                        }
                    ],
                    "start": 1540000,
                    "type": "function",
                    "view": "function NetworkUtils.getClientOrServer()\n  -> Client: Client|Server"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkUtils.lua",
                "finish": 1540039,
                "start": 1540009,
                "type": "setfield"
            }
        ],
        "desc": " Sometimes you don't care if it's the client or server, but you need one of them to send the messages.\n\n@*return* `Client` — or Server 'object'",
        "name": "NetworkUtils.getClientOrServer",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1740003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1690000,
                    "type": "function",
                    "view": "function NetworkUtils.getNextNetworkMessageId()\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkUtils.lua",
                "finish": 1690045,
                "start": 1690009,
                "type": "setfield"
            }
        ],
        "name": "NetworkUtils.getNextNetworkMessageId",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 2590003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2440000,
                    "type": "function",
                    "view": "function NetworkUtils.isTick()\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkUtils.lua",
                "finish": 2440028,
                "start": 2440009,
                "type": "setfield"
            }
        ],
        "name": "NetworkUtils.isTick",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 150040,
                    "start": 150039,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkUtils.lua",
                "finish": 150036,
                "start": 150000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1710083,
                    "start": 1710043,
                    "type": "binary",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkUtils.lua",
                "finish": 1710040,
                "start": 1710004,
                "type": "setfield"
            }
        ],
        "name": "NetworkUtils.networkMessageIdCounter",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 200026,
                "start": 200011,
                "type": "doc.class"
            }
        ],
        "desc": " NetworkVscUtils:",
        "fields": [
            {
                "desc": " Simply adds or updates all needed Network Variable Storage Components.\n\n@*param* `entityId` — Id of an entity provided by Noita\n\n@*param* `ownerName` — Owners name. Cannot be nil.\n\n@*param* `ownerGuid` — Owners guid. Cannot be nil.\n\n@*param* `nuid` — Network unique identifier. Can only be nil on clients, but not on server.\n\n@*param* `spawnX` — X position of the entity, when spawned. Can only be set once! Can be nil.\n\n@*param* `spawnY` — Y position of the entity, when spawned. Can only be set once! Can be nil.",
                "extends": {
                    "args": [
                        {
                            "desc": "Id of an entity provided by Noita",
                            "finish": 4460052,
                            "start": 4460044,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Owners name. Cannot be nil.",
                            "finish": 4460063,
                            "start": 4460054,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Owners guid. Cannot be nil.",
                            "finish": 4460074,
                            "start": 4460065,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Network unique identifier. Can only be nil on clients, but not on server.",
                            "finish": 4460080,
                            "start": 4460076,
                            "type": "local",
                            "view": "number|nil"
                        },
                        {
                            "desc": "X position of the entity, when spawned. Can only be set once! Can be nil.",
                            "finish": 4460088,
                            "start": 4460082,
                            "type": "local",
                            "view": "number|nil"
                        },
                        {
                            "desc": "Y position of the entity, when spawned. Can only be set once! Can be nil.",
                            "finish": 4460096,
                            "start": 4460090,
                            "type": "local",
                            "view": "number|nil"
                        }
                    ],
                    "desc": " Simply adds or updates all needed Network Variable Storage Components.\n\n@*param* `entityId` — Id of an entity provided by Noita\n\n@*param* `ownerName` — Owners name. Cannot be nil.\n\n@*param* `ownerGuid` — Owners guid. Cannot be nil.\n\n@*param* `nuid` — Network unique identifier. Can only be nil on clients, but not on server.\n\n@*param* `spawnX` — X position of the entity, when spawned. Can only be set once! Can be nil.\n\n@*param* `spawnY` — Y position of the entity, when spawned. Can only be set once! Can be nil.",
                    "finish": 4770003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        }
                    ],
                    "start": 4460000,
                    "type": "function",
                    "view": "function NetworkVscUtils.addOrUpdateAllVscs(entityId: number, ownerName: string, ownerGuid: string, nuid: number|nil, spawnX: number|nil, spawnY: number|nil)\n  -> componentIdForOwnerName: integer|nil\n  2. componentIdForOwnerGuid: integer|nil\n  3. componentIdForNuid: integer|nil\n  4. componentIdForNuidDebugger: integer|nil\n  5. componentIdForNuidDebugger: integer|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4460043,
                "name": "addOrUpdateAllVscs",
                "start": 4460009,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4230065,
                    "start": 4230047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4230035,
                "name": "componentNameOfNuid",
                "start": 4230000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4240063,
                    "start": 4240047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4240043,
                "name": "componentNameOfNuidDebugger",
                "start": 4240000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4250065,
                    "start": 4250047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4250042,
                "name": "componentNameOfNuidUpdater",
                "start": 4250000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4220071,
                    "start": 4220047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4220041,
                "name": "componentNameOfOwnersGuid",
                "start": 4220000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4210071,
                    "start": 4210047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4210041,
                "name": "componentNameOfOwnersName",
                "start": 4210000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4260068,
                    "start": 4260047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4260037,
                "name": "componentNameOfSpawnX",
                "start": 4260000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4270068,
                    "start": 4270047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4270037,
                "name": "componentNameOfSpawnY",
                "start": 4270000,
                "type": "setfield"
            },
            {
                "desc": " Returns all Network Vsc values by its component ids.\n\n@*param* `ownerNameCompId` — Component Id of the OwnerNameVsc\n\n@*param* `ownerGuidCompId` — Component Id of the OwnerGuidVsc\n\n@*param* `nuidCompId` — Component Id of the NuidVsc",
                "extends": {
                    "args": [
                        {
                            "desc": "Component Id of the OwnerNameVsc",
                            "finish": 5050070,
                            "start": 5050055,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Component Id of the OwnerGuidVsc",
                            "finish": 5050087,
                            "start": 5050072,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Component Id of the NuidVsc",
                            "finish": 5050099,
                            "start": 5050089,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Returns all Network Vsc values by its component ids.\n\n@*param* `ownerNameCompId` — Component Id of the OwnerNameVsc\n\n@*param* `ownerGuidCompId` — Component Id of the OwnerGuidVsc\n\n@*param* `nuidCompId` — Component Id of the NuidVsc",
                    "finish": 5240003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 5050000,
                    "type": "function",
                    "view": "function NetworkVscUtils.getAllVcsValuesByComponentIds(ownerNameCompId: number, ownerGuidCompId: number, nuidCompId: number)\n  -> ownerName: string\n  2. ownerGuid: string\n  3. nuid: number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 5050054,
                "name": "getAllVcsValuesByComponentIds",
                "start": 5050009,
                "type": "setfield"
            },
            {
                "desc": " Returns all Network Vsc values by its entity id.\n\n@*param* `entityId` — Entity Id provided by Noita\n\n@*return* `ownerName,ownerGuid,nuid` — - nuid can be nil",
                "extends": {
                    "args": [
                        {
                            "desc": "Entity Id provided by Noita",
                            "finish": 4820059,
                            "start": 4820051,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Returns all Network Vsc values by its entity id.\n\n@*param* `entityId` — Entity Id provided by Noita\n\n@*return* `ownerName,ownerGuid,nuid` — - nuid can be nil",
                    "finish": 4960003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string?"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        },
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": 4820000,
                    "type": "function",
                    "view": "function NetworkVscUtils.getAllVscValuesByEntityId(entityId: number)\n  -> ownerName: string?\n  2. ownerGuid: string?\n  3. nuid: number?"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4820050,
                "name": "getAllVscValuesByEntityId",
                "start": 4820009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5800057,
                            "start": 5800049,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 5990003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": 5800000,
                    "type": "function",
                    "view": "function NetworkVscUtils.hasNetworkLuaComponents(entityId: any)\n  -> boolean|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 5800048,
                "name": "hasNetworkLuaComponents",
                "start": 5800009,
                "type": "setfield"
            },
            {
                "desc": " Checks if the nuid Vsc exists, if so returns nuid\n\n@*return* `has` — retruns 'false, -1': Returns false, if there is no NuidVsc or nuid is empty.\n\n@*return* `nuid` — Returns 'true, nuid', if set.",
                "extends": {
                    "args": [
                        {
                            "finish": 5610044,
                            "start": 5610036,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Checks if the nuid Vsc exists, if so returns nuid\n\n@*return* `has` — retruns 'false, -1': Returns false, if there is no NuidVsc or nuid is empty.\n\n@*return* `nuid` — Returns 'true, nuid', if set.",
                    "finish": 5780003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 5610000,
                    "type": "function",
                    "view": "function NetworkVscUtils.hasNuidSet(entityId: number)\n  -> has: boolean\n  2. nuid: number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 5610035,
                "name": "hasNuidSet",
                "start": 5610009,
                "type": "setfield"
            },
            {
                "desc": " Returns true, componentId and nuid if the entity has a NetworkVsc.\n\n@*param* `entityId` — entityId provided by Noita",
                "extends": {
                    "args": [
                        {
                            "desc": "entityId provided by Noita",
                            "finish": 5310058,
                            "start": 5310050,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Returns true, componentId and nuid if the entity has a NetworkVsc.\n\n@*param* `entityId` — entityId provided by Noita",
                    "finish": 5550003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "type": "function.return",
                            "view": "number|nil"
                        }
                    ],
                    "start": 5310000,
                    "type": "function",
                    "view": "function NetworkVscUtils.isNetworkEntityByNuidVsc(entityId: number)\n  -> isNetworkEntity: boolean\n  2. componentId: number\n  3. nuid: number|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 5310049,
                "name": "isNetworkEntityByNuidVsc",
                "start": 5310009,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4190053,
                    "start": 4190047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4190020,
                "name": "name",
                "start": 4190000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4200061,
                    "start": 4200047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4200027,
                "name": "valueString",
                "start": 4200000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4180073,
                    "start": 4180047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4180044,
                "name": "variableStorageComponentName",
                "start": 4180000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 20085,
                    "start": 20018,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/lua_component_enabler.lua",
                "finish": 20015,
                "start": 20000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 40089,
                    "start": 40022,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/nuid_debug.lua",
                "finish": 40015,
                "start": 40000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 30090,
                    "start": 30023,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/nuid_updater.lua",
                "finish": 30015,
                "start": 30000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 210020,
                    "start": 210018,
                    "type": "table",
                    "view": "NetworkVscUtils"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 210015,
                "start": 210000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 6050036,
                    "start": 6050021,
                    "type": "getglobal",
                    "view": "NetworkVscUtils"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 6050018,
                "start": 6050000,
                "type": "setfield"
            }
        ],
        "desc": " NetworkVscUtils:",
        "name": "NetworkVscUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Id of an entity provided by Noita",
                            "finish": 4460052,
                            "start": 4460044,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Owners name. Cannot be nil.",
                            "finish": 4460063,
                            "start": 4460054,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Owners guid. Cannot be nil.",
                            "finish": 4460074,
                            "start": 4460065,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Network unique identifier. Can only be nil on clients, but not on server.",
                            "finish": 4460080,
                            "start": 4460076,
                            "type": "local",
                            "view": "number|nil"
                        },
                        {
                            "desc": "X position of the entity, when spawned. Can only be set once! Can be nil.",
                            "finish": 4460088,
                            "start": 4460082,
                            "type": "local",
                            "view": "number|nil"
                        },
                        {
                            "desc": "Y position of the entity, when spawned. Can only be set once! Can be nil.",
                            "finish": 4460096,
                            "start": 4460090,
                            "type": "local",
                            "view": "number|nil"
                        }
                    ],
                    "desc": " Simply adds or updates all needed Network Variable Storage Components.\n\n@*param* `entityId` — Id of an entity provided by Noita\n\n@*param* `ownerName` — Owners name. Cannot be nil.\n\n@*param* `ownerGuid` — Owners guid. Cannot be nil.\n\n@*param* `nuid` — Network unique identifier. Can only be nil on clients, but not on server.\n\n@*param* `spawnX` — X position of the entity, when spawned. Can only be set once! Can be nil.\n\n@*param* `spawnY` — Y position of the entity, when spawned. Can only be set once! Can be nil.",
                    "finish": 4770003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        }
                    ],
                    "start": 4460000,
                    "type": "function",
                    "view": "function NetworkVscUtils.addOrUpdateAllVscs(entityId: number, ownerName: string, ownerGuid: string, nuid: number|nil, spawnX: number|nil, spawnY: number|nil)\n  -> componentIdForOwnerName: integer|nil\n  2. componentIdForOwnerGuid: integer|nil\n  3. componentIdForNuid: integer|nil\n  4. componentIdForNuidDebugger: integer|nil\n  5. componentIdForNuidDebugger: integer|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4460043,
                "start": 4460009,
                "type": "setfield"
            }
        ],
        "desc": " Simply adds or updates all needed Network Variable Storage Components.\n\n@*param* `entityId` — Id of an entity provided by Noita\n\n@*param* `ownerName` — Owners name. Cannot be nil.\n\n@*param* `ownerGuid` — Owners guid. Cannot be nil.\n\n@*param* `nuid` — Network unique identifier. Can only be nil on clients, but not on server.\n\n@*param* `spawnX` — X position of the entity, when spawned. Can only be set once! Can be nil.\n\n@*param* `spawnY` — Y position of the entity, when spawned. Can only be set once! Can be nil.",
        "name": "NetworkVscUtils.addOrUpdateAllVscs",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4230065,
                    "start": 4230047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4230035,
                "start": 4230000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.componentNameOfNuid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4240063,
                    "start": 4240047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4240043,
                "start": 4240000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.componentNameOfNuidDebugger",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4250065,
                    "start": 4250047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4250042,
                "start": 4250000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.componentNameOfNuidUpdater",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4220071,
                    "start": 4220047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4220041,
                "start": 4220000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.componentNameOfOwnersGuid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4210071,
                    "start": 4210047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4210041,
                "start": 4210000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.componentNameOfOwnersName",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4260068,
                    "start": 4260047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4260037,
                "start": 4260000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.componentNameOfSpawnX",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4270068,
                    "start": 4270047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4270037,
                "start": 4270000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.componentNameOfSpawnY",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Component Id of the OwnerNameVsc",
                            "finish": 5050070,
                            "start": 5050055,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Component Id of the OwnerGuidVsc",
                            "finish": 5050087,
                            "start": 5050072,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Component Id of the NuidVsc",
                            "finish": 5050099,
                            "start": 5050089,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Returns all Network Vsc values by its component ids.\n\n@*param* `ownerNameCompId` — Component Id of the OwnerNameVsc\n\n@*param* `ownerGuidCompId` — Component Id of the OwnerGuidVsc\n\n@*param* `nuidCompId` — Component Id of the NuidVsc",
                    "finish": 5240003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 5050000,
                    "type": "function",
                    "view": "function NetworkVscUtils.getAllVcsValuesByComponentIds(ownerNameCompId: number, ownerGuidCompId: number, nuidCompId: number)\n  -> ownerName: string\n  2. ownerGuid: string\n  3. nuid: number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 5050054,
                "start": 5050009,
                "type": "setfield"
            }
        ],
        "desc": " Returns all Network Vsc values by its component ids.\n\n@*param* `ownerNameCompId` — Component Id of the OwnerNameVsc\n\n@*param* `ownerGuidCompId` — Component Id of the OwnerGuidVsc\n\n@*param* `nuidCompId` — Component Id of the NuidVsc",
        "name": "NetworkVscUtils.getAllVcsValuesByComponentIds",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Entity Id provided by Noita",
                            "finish": 4820059,
                            "start": 4820051,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Returns all Network Vsc values by its entity id.\n\n@*param* `entityId` — Entity Id provided by Noita\n\n@*return* `ownerName,ownerGuid,nuid` — - nuid can be nil",
                    "finish": 4960003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string?"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        },
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": 4820000,
                    "type": "function",
                    "view": "function NetworkVscUtils.getAllVscValuesByEntityId(entityId: number)\n  -> ownerName: string?\n  2. ownerGuid: string?\n  3. nuid: number?"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4820050,
                "start": 4820009,
                "type": "setfield"
            }
        ],
        "desc": " Returns all Network Vsc values by its entity id.\n\n@*param* `entityId` — Entity Id provided by Noita\n\n@*return* `ownerName,ownerGuid,nuid` — - nuid can be nil",
        "name": "NetworkVscUtils.getAllVscValuesByEntityId",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5800057,
                            "start": 5800049,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 5990003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": 5800000,
                    "type": "function",
                    "view": "function NetworkVscUtils.hasNetworkLuaComponents(entityId: any)\n  -> boolean|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 5800048,
                "start": 5800009,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.hasNetworkLuaComponents",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5610044,
                            "start": 5610036,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Checks if the nuid Vsc exists, if so returns nuid\n\n@*return* `has` — retruns 'false, -1': Returns false, if there is no NuidVsc or nuid is empty.\n\n@*return* `nuid` — Returns 'true, nuid', if set.",
                    "finish": 5780003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 5610000,
                    "type": "function",
                    "view": "function NetworkVscUtils.hasNuidSet(entityId: number)\n  -> has: boolean\n  2. nuid: number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 5610035,
                "start": 5610009,
                "type": "setfield"
            }
        ],
        "desc": " Checks if the nuid Vsc exists, if so returns nuid\n\n@*return* `has` — retruns 'false, -1': Returns false, if there is no NuidVsc or nuid is empty.\n\n@*return* `nuid` — Returns 'true, nuid', if set.",
        "name": "NetworkVscUtils.hasNuidSet",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "entityId provided by Noita",
                            "finish": 5310058,
                            "start": 5310050,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Returns true, componentId and nuid if the entity has a NetworkVsc.\n\n@*param* `entityId` — entityId provided by Noita",
                    "finish": 5550003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "type": "function.return",
                            "view": "number|nil"
                        }
                    ],
                    "start": 5310000,
                    "type": "function",
                    "view": "function NetworkVscUtils.isNetworkEntityByNuidVsc(entityId: number)\n  -> isNetworkEntity: boolean\n  2. componentId: number\n  3. nuid: number|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 5310049,
                "start": 5310009,
                "type": "setfield"
            }
        ],
        "desc": " Returns true, componentId and nuid if the entity has a NetworkVsc.\n\n@*param* `entityId` — entityId provided by Noita",
        "name": "NetworkVscUtils.isNetworkEntityByNuidVsc",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4190053,
                    "start": 4190047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4190020,
                "start": 4190000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.name",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4200061,
                    "start": 4200047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4200027,
                "start": 4200000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.valueString",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4180073,
                    "start": 4180047,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 4180044,
                "start": 4180000,
                "type": "setfield"
            }
        ],
        "name": "NetworkVscUtils.variableStorageComponentName",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 50093,
                    "start": 50022,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/nuid_debug.lua",
                "finish": 50019,
                "start": 50000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 60024,
                    "start": 60022,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NoitaComponentUtils.lua",
                "finish": 60019,
                "start": 60000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 830044,
                    "start": 830025,
                    "type": "getglobal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NoitaComponentUtils.lua",
                "finish": 830022,
                "start": 830000,
                "type": "setfield"
            }
        ],
        "desc": " NoitaComponentUtils:",
        "name": "NoitaComponentUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 460051,
                            "start": 460043,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Fetches data like position, rotation, velocity, health and filename",
                    "finish": 720003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "Health"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "type": "function.return",
                            "view": "Vec2"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 460000,
                    "type": "function",
                    "view": "function NoitaComponentUtils.getEntityData(entityId: number)\n  -> ownername: string\n  2. ownerguid: string\n  3. nuid: number\n  4. filename: string\n  5. health: Health\n  6. rotation: number\n  7. velocity: Vec2\n  8. x: number\n  9. y: number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NoitaComponentUtils.lua",
                "finish": 460042,
                "start": 460009,
                "type": "setfield"
            }
        ],
        "desc": " Fetches data like position, rotation, velocity, health and filename",
        "name": "NoitaComponentUtils.getEntityData",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 740053,
                            "start": 740049,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 790003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "Health"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "type": "function.return",
                            "view": "Vec2"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 740000,
                    "type": "function",
                    "view": "function NoitaComponentUtils.getEntityDataByNuid(nuid: any)\n  -> string\n  2. string\n  3. number\n  4. string\n  5. Health\n  6. number\n  7. Vec2\n  8. number\n  9. number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NoitaComponentUtils.lua",
                "finish": 740048,
                "start": 740009,
                "type": "setfield"
            }
        ],
        "name": "NoitaComponentUtils.getEntityDataByNuid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 140051,
                            "start": 140043,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 140054,
                            "start": 140053,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 140057,
                            "start": 140056,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 140067,
                            "start": 140059,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 140077,
                            "start": 140069,
                            "type": "local",
                            "view": "Vec2?"
                        },
                        {
                            "finish": 140085,
                            "start": 140079,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": 410003,
                    "start": 140000,
                    "type": "function",
                    "view": "function NoitaComponentUtils.setEntityData(entityId: number, x: number, y: number, rotation: number, velocity?: Vec2, health: number)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NoitaComponentUtils.lua",
                "finish": 140042,
                "start": 140009,
                "type": "setfield"
            }
        ],
        "name": "NoitaComponentUtils.setEntityData",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 20020,
                    "start": 20018,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/NoitaMpSettings.lua",
                "finish": 20015,
                "start": 20000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 850036,
                    "start": 850021,
                    "type": "getglobal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/NoitaMpSettings.lua",
                "finish": 850018,
                "start": 850000,
                "type": "setfield"
            }
        ],
        "desc": " NoitaMpSettings: Replacement for Noita ModSettings.\n @classmod NoitaMpSettings",
        "name": "NoitaMpSettings",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 230003,
                    "start": 120000,
                    "type": "function",
                    "view": "function NoitaMpSettings.clearAndCreateSettings()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/NoitaMpSettings.lua",
                "finish": 120047,
                "start": 120009,
                "type": "setfield"
            }
        ],
        "name": "NoitaMpSettings.clearAndCreateSettings",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 610039,
                            "start": 610036,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 810003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 610000,
                    "type": "function",
                    "view": "function NoitaMpSettings.getSetting(key: any)\n  -> unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/NoitaMpSettings.lua",
                "finish": 610035,
                "start": 610009,
                "type": "setfield"
            }
        ],
        "name": "NoitaMpSettings.getSetting",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 250042,
                            "start": 250039,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 250049,
                            "start": 250044,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 590003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 250000,
                    "type": "function",
                    "view": "function NoitaMpSettings.writeSettings(key: any, value: any)\n  -> unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/NoitaMpSettings.lua",
                "finish": 250038,
                "start": 250009,
                "type": "setfield"
            }
        ],
        "name": "NoitaMpSettings.writeSettings",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 120020,
                    "start": 120018,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NuidUtils.lua",
                "finish": 120009,
                "start": 120000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 830024,
                    "start": 830015,
                    "type": "getglobal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NuidUtils.lua",
                "finish": 830012,
                "start": 830000,
                "type": "setfield"
            }
        ],
        "desc": " NuidUtils:\n class for getting the current network unique identifier",
        "name": "NuidUtils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": " If an entity died, the associated nuid-entityId-set will be updated with entityId multiplied by -1.\n If this happens, KillEntityMsg has to be send by network.",
                    "finish": 790003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 590000,
                    "type": "function",
                    "view": "function NuidUtils.getEntityIdsByKillIndicator()\n  -> table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NuidUtils.lua",
                "finish": 590046,
                "start": 590009,
                "type": "setfield"
            }
        ],
        "desc": " If an entity died, the associated nuid-entityId-set will be updated with entityId multiplied by -1.\n If this happens, KillEntityMsg has to be send by network.",
        "name": "NuidUtils.getEntityIdsByKillIndicator",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 550003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 530000,
                    "type": "function",
                    "view": "function NuidUtils.getNextNuid()\n  -> number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NuidUtils.lua",
                "finish": 530030,
                "start": 530009,
                "type": "setfield"
            }
        ],
        "name": "NuidUtils.getNextNuid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1380003,
                    "start": 930017,
                    "type": "function",
                    "view": "function OnEntityLoaded()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 930014,
                "start": 930000,
                "type": "setglobal"
            }
        ],
        "desc": " Make sure this is only be executed once in OnWorldPREUpdate!",
        "name": "OnEntityLoaded",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1430003,
                    "start": 1410018,
                    "type": "function",
                    "view": "function OnEntityRemoved()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 1410015,
                "start": 1410000,
                "type": "setglobal"
            }
        ],
        "desc": " Make sure this is onlt be executed once in OnWorldPOSTUpdate!",
        "name": "OnEntityRemoved",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 30037,
                            "start": 30028,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 30049,
                            "start": 30039,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 130003,
                    "start": 30000,
                    "type": "function",
                    "view": "function PlayerNameFunction(entity_id: any, playerName: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/name_tags.lua",
                "finish": 30027,
                "start": 30009,
                "type": "setglobal"
            }
        ],
        "name": "PlayerNameFunction",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 5870036,
                    "start": 5870016,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 5870007,
                "start": 5870004,
                "type": "setglobal"
            }
        ],
        "name": "SDL",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 11150048,
                    "start": 11150016,
                    "type": "select",
                    "view": "SockServer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 11150009,
                "start": 11150000,
                "type": "setfield"
            }
        ],
        "name": "Server",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 10015,
                    "start": 10013,
                    "type": "table",
                    "view": "ServerInit"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 10010,
                "start": 10000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 11140026,
                    "start": 11140016,
                    "type": "getglobal",
                    "view": "ServerInit"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 11140013,
                "start": 11140000,
                "type": "setfield"
            }
        ],
        "desc": " Because of stack overflow errors when loading lua files,\n I decided to put Utils 'classes' into globals",
        "name": "ServerInit",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 20,
                "start": 10,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "desc": " ServerInit constructor\n Creates a new instance of server 'class'",
                "extends": {
                    "args": [
                        {
                            "finish": 150034,
                            "start": 150024,
                            "type": "local",
                            "view": "SockServer"
                        }
                    ],
                    "desc": " ServerInit constructor\n Creates a new instance of server 'class'",
                    "finish": 11100003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "SockServer"
                        }
                    ],
                    "start": 150000,
                    "type": "function",
                    "view": "function ServerInit.new(sockServer: SockServer)\n  -> self: SockServer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 150023,
                "name": "new",
                "start": 150009,
                "type": "setfield"
            }
        ],
        "name": "ServerInit",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 150034,
                            "start": 150024,
                            "type": "local",
                            "view": "SockServer"
                        }
                    ],
                    "desc": " ServerInit constructor\n Creates a new instance of server 'class'",
                    "finish": 11100003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "SockServer"
                        }
                    ],
                    "start": 150000,
                    "type": "function",
                    "view": "function ServerInit.new(sockServer: SockServer)\n  -> self: SockServer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 150023,
                "start": 150009,
                "type": "setfield"
            }
        ],
        "desc": " ServerInit constructor\n Creates a new instance of server 'class'",
        "name": "ServerInit.new",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 190024,
                "start": 190014,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "extends": {
                    "finish": 260033,
                    "start": 260030,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 260027,
                "name": "acknowledgeMaxSize",
                "start": 260004,
                "type": "setfield"
            },
            {
                "desc": " Checks if the current local user is a client\n\n@*return* `iAm` — true if client",
                "extends": {
                    "args": [],
                    "desc": " Checks if the current local user is a client\n\n@*return* `iAm` — true if client",
                    "finish": 10050007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 9970004,
                    "type": "function",
                    "view": "function SockClient.amIClient()\n  -> iAm: boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 9970027,
                "name": "amIClient",
                "start": 9970013,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1430062,
                    "start": 1430033,
                    "type": "select",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 1430030,
                "name": "clientCacheId",
                "start": 1430012,
                "type": "setfield"
            },
            {
                "desc": " Connects to a server on ip and port. Both can be nil, then ModSettings will be used.\n\n@*param* `ip` — localhost or 127.0.0.1 or nil\n\n@*param* `port` — port number from 1 to max of 65535 or nil\n\n@*param* `code` — connection code 0 = connecting first time, 1 = connected second time with loaded seed",
                "extends": {
                    "args": [
                        {
                            "desc": "localhost or 127.0.0.1 or nil",
                            "finish": 7710028,
                            "start": 7710026,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "port number from 1 to max of 65535 or nil",
                            "finish": 7710034,
                            "start": 7710030,
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "connection code 0 = connecting first time, 1 = connected second time with loaded seed",
                            "finish": 7710040,
                            "start": 7710036,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Connects to a server on ip and port. Both can be nil, then ModSettings will be used.\n\n@*param* `ip` — localhost or 127.0.0.1 or nil\n\n@*param* `port` — port number from 1 to max of 65535 or nil\n\n@*param* `code` — connection code 0 = connecting first time, 1 = connected second time with loaded seed",
                    "finish": 8080007,
                    "start": 7710004,
                    "type": "function",
                    "view": "function SockClient.connect(ip: string, port?: number, code: number)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 7710025,
                "name": "connect",
                "start": 7710013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 8200007,
                    "start": 8120004,
                    "type": "function",
                    "view": "function SockClient.disconnect()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 8120028,
                "name": "disconnect",
                "start": 8120013,
                "type": "setfield"
            },
            {
                "desc": " Mainly for profiling. Returns then network cache, aka acknowledge.",
                "extends": {
                    "args": [],
                    "desc": " Mainly for profiling. Returns then network cache, aka acknowledge.",
                    "finish": 10110007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 10090004,
                    "type": "function",
                    "view": "function SockClient.getAckCacheSize()\n  -> cacheSize: number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 10090033,
                "name": "getAckCacheSize",
                "start": 10090013,
                "type": "setfield"
            },
            {
                "desc": " guid might not be set here or will be overwritten at the end of the constructor. @see setGuid",
                "extends": {
                    "finish": 240070,
                    "start": 240030,
                    "type": "select",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 240013,
                "name": "guid",
                "start": 240004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 900028,
                    "start": 900024,
                    "type": "getlocal",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 900021,
                "name": "guid",
                "start": 900012,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 3590071,
                    "start": 3590059,
                    "type": "getfield",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 3590021,
                "name": "guid",
                "start": 3590012,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 280057,
                    "start": 280030,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 280015,
                "name": "health",
                "start": 280004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 210038,
                    "start": 210030,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 210012,
                "name": "iAm",
                "start": 210004,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 8290007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 8270004,
                    "type": "function",
                    "view": "function SockClient.isConnected()\n  -> unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 8270029,
                "name": "isConnected",
                "start": 8270013,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 310033,
                    "start": 310030,
                    "type": "nil",
                    "view": "nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 310020,
                "name": "missingMods",
                "start": 310004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 6460040,
                    "start": 6460031,
                    "type": "getlocal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 6460028,
                "name": "missingMods",
                "start": 6460012,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 220070,
                    "start": 220030,
                    "type": "select",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 220013,
                "name": "name",
                "start": 220004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 250033,
                    "start": 250030,
                    "type": "nil",
                    "view": "nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 250013,
                "name": "nuid",
                "start": 250004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 2320031,
                    "start": 2320028,
                    "type": "nil",
                    "view": "nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 2320017,
                "name": "nuid",
                "start": 2320008,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 4850035,
                    "start": 4850028,
                    "type": "getlocal",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 4850025,
                "name": "nuid",
                "start": 4850016,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 300032,
                    "start": 300030,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 300021,
                "name": "otherClients",
                "start": 300004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 2330030,
                    "start": 2330028,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 2330025,
                "name": "otherClients",
                "start": 2330008,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 320033,
                    "start": 320030,
                    "type": "nil",
                    "view": "nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 320021,
                "name": "requiredMods",
                "start": 320004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 6300041,
                    "start": 6300028,
                    "type": "getfield",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 6300025,
                "name": "requiredMods",
                "start": 6300008,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 8730012,
                            "start": 8730012,
                            "type": "self",
                            "view": "SockClient"
                        },
                        {
                            "finish": 8730028,
                            "start": 8730023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 8730034,
                            "start": 8730030,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 8970007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 8730004,
                    "type": "function",
                    "view": "function SockClient.send(self: SockClient, event: any, data: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 8730022,
                "name": "send",
                "start": 8730013,
                "type": "setmethod"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 9670041,
                            "start": 9670032,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 9760007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 9670004,
                    "type": "function",
                    "view": "function SockClient.sendDeadNuids(deadNuids: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 9670031,
                "name": "sendDeadNuids",
                "start": 9670013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 9420041,
                            "start": 9420033,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 9650007,
                    "start": 9420004,
                    "type": "function",
                    "view": "function SockClient.sendEntityData(entityId: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 9420032,
                "name": "sendEntityData",
                "start": 9420013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 9340035,
                            "start": 9340031,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 9400007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 9340004,
                    "type": "function",
                    "view": "function SockClient.sendLostNuid(nuid: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 9340030,
                "name": "sendLostNuid",
                "start": 9340013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 9930007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 9780004,
                    "type": "function",
                    "view": "function SockClient.sendMinaInformation()\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 9780037,
                "name": "sendMinaInformation",
                "start": 9780013,
                "type": "setfield"
            },
            {
                "desc": "Sends a message to the server that the client needs a nuid.",
                "extends": {
                    "args": [
                        {
                            "finish": 9030040,
                            "start": 9030031,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 9030051,
                            "start": 9030042,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 9030061,
                            "start": 9030053,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Sends a message to the server that the client needs a nuid.",
                    "finish": 9320007,
                    "start": 9030004,
                    "type": "function",
                    "view": "function SockClient.sendNeedNuid(ownerName: string, ownerGuid: string, entityId: number)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 9030030,
                "name": "sendNeedNuid",
                "start": 9030013,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 290032,
                    "start": 290030,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 290019,
                "name": "serverInfo",
                "start": 290004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 2340030,
                    "start": 2340028,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 2340023,
                "name": "serverInfo",
                "start": 2340008,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 330035,
                    "start": 330030,
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 330019,
                "name": "syncedMods",
                "start": 330004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 270046,
                    "start": 270030,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 270018,
                "name": "transform",
                "start": 270004,
                "type": "setfield"
            },
            {
                "desc": " Updates the Client by checking for network events and handling them.",
                "extends": {
                    "args": [],
                    "desc": " Updates the Client by checking for network events and handling them.",
                    "finish": 8690007,
                    "start": 8380004,
                    "type": "function",
                    "view": "function SockClient.update()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Client.lua",
                "finish": 8380024,
                "name": "update",
                "start": 8380013,
                "type": "setfield"
            }
        ],
        "name": "SockClient",
        "type": "type"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 170024,
                "start": 170014,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "desc": "self.acknowledge        = {} -- sock.lua#Client:send -> self.acknowledge[packetsSent] = { event = event, data = data, entityId = data.entityId, status = NetworkUtils.events.acknowledgement.sent }\ntable.setNoitaMpDefaultMetaMethods(self.acknowledge, \"v\")",
                "extends": {
                    "finish": 340033,
                    "start": 340030,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 340027,
                "name": "acknowledgeMaxSize",
                "start": 340004,
                "type": "setfield"
            },
            {
                "desc": " Checks if the current local user is the server\n\n@*return* `iAm` — true if server",
                "extends": {
                    "args": [],
                    "desc": " Checks if the current local user is the server\n\n@*return* `iAm` — true if server",
                    "finish": 10840007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 10700004,
                    "type": "function",
                    "view": "function SockServer.amIServer()\n  -> iAm: boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 10700027,
                "name": "amIServer",
                "start": 10700013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 10920026,
                            "start": 10920022,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 10960007,
                    "start": 10920004,
                    "type": "function",
                    "view": "function SockServer.ban(name: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 10920021,
                "name": "ban",
                "start": 10920013,
                "type": "setfield"
            },
            {
                "desc": " Mainly for profiling. Returns then network cache, aka acknowledge.",
                "extends": {
                    "args": [],
                    "desc": " Mainly for profiling. Returns then network cache, aka acknowledge.",
                    "finish": 11020007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 11000004,
                    "type": "function",
                    "view": "function SockServer.getAckCacheSize()\n  -> cacheSize: number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 11000033,
                "name": "getAckCacheSize",
                "start": 11000013,
                "type": "setfield"
            },
            {
                "desc": " guid might not be set here or will be overwritten at the end of the constructor. @see setGuid",
                "extends": {
                    "finish": 300070,
                    "start": 300030,
                    "type": "select",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 300013,
                "name": "guid",
                "start": 300004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 950028,
                    "start": 950024,
                    "type": "getlocal",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 950021,
                "name": "guid",
                "start": 950012,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 360057,
                    "start": 360030,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 360015,
                "name": "health",
                "start": 360004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 270038,
                    "start": 270030,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 270012,
                "name": "iAm",
                "start": 270004,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 9130007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 9040004,
                    "type": "function",
                    "view": "function SockServer.isRunning()\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 9040027,
                "name": "isRunning",
                "start": 9040013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 10860027,
                            "start": 10860023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 10900007,
                    "start": 10860004,
                    "type": "function",
                    "view": "function SockServer.kick(name: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 10860022,
                "name": "kick",
                "start": 10860013,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 370033,
                    "start": 370030,
                    "type": "nil",
                    "view": "nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 370022,
                "name": "modListCached",
                "start": 370004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 5740040,
                    "start": 5740033,
                    "type": "getlocal",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 5740030,
                "name": "modListCached",
                "start": 5740012,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 280070,
                    "start": 280030,
                    "type": "select",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 280013,
                "name": "name",
                "start": 280004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 310033,
                    "start": 310030,
                    "type": "nil",
                    "view": "nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 310013,
                "name": "nuid",
                "start": 310004,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7940012,
                            "start": 7940012,
                            "type": "self",
                            "view": "SockServer"
                        },
                        {
                            "finish": 7940027,
                            "start": 7940023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 7940034,
                            "start": 7940029,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 7940040,
                            "start": 7940036,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 8180007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 7940004,
                    "type": "function",
                    "view": "function SockServer.send(self: SockServer, peer: any, event: any, data: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 7940022,
                "name": "send",
                "start": 7940013,
                "type": "setmethod"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 10400041,
                            "start": 10400032,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 10490007,
                    "start": 10400004,
                    "type": "function",
                    "view": "function SockServer.sendDeadNuids(deadNuids: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 10400031,
                "name": "sendDeadNuids",
                "start": 10400013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 10110041,
                            "start": 10110033,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 10380007,
                    "start": 10110004,
                    "type": "function",
                    "view": "function SockServer.sendEntityData(entityId: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 10110032,
                "name": "sendEntityData",
                "start": 10110013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 10660007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 10510004,
                    "type": "function",
                    "view": "function SockServer.sendMinaInformation()\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 10510037,
                "name": "sendMinaInformation",
                "start": 10510013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 9620034,
                            "start": 9620030,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 9620043,
                            "start": 9620036,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 9620052,
                            "start": 9620045,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 9690007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 9620004,
                    "type": "function",
                    "view": "function SockServer.sendNewGuid(peer: any, oldGuid: any, newGuid: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 9620029,
                "name": "sendNewGuid",
                "start": 9620013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 9800049,
                            "start": 9800040,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 9800060,
                            "start": 9800051,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 9800070,
                            "start": 9800062,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 9800088,
                            "start": 9800072,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 9800094,
                            "start": 9800090,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 10090007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 9800004,
                    "type": "function",
                    "view": "function SockServer.sendNewNuidSerialized(ownerName: any, ownerGuid: any, entityId: any, serializedEntity: any, nuid: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 9800039,
                "name": "sendNewNuidSerialized",
                "start": 9800013,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 8200012,
                            "start": 8200012,
                            "type": "self",
                            "view": "SockServer"
                        },
                        {
                            "finish": 8200033,
                            "start": 8200028,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 8200039,
                            "start": 8200035,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 8360007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 8200004,
                    "type": "function",
                    "view": "function SockServer.sendToAll(self: SockServer, event: any, data: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 8200027,
                "name": "sendToAll",
                "start": 8200013,
                "type": "setmethod"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 8380012,
                            "start": 8380012,
                            "type": "self",
                            "view": "SockServer"
                        },
                        {
                            "finish": 8380035,
                            "start": 8380031,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 8380042,
                            "start": 8380037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 8380048,
                            "start": 8380044,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 8480007,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 8380004,
                    "type": "function",
                    "view": "function SockServer.sendToAllBut(self: SockServer, peer: any, event: any, data: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 8380030,
                "name": "sendToAllBut",
                "start": 8380013,
                "type": "setmethod"
            },
            {
                "desc": " Starts a server on ip and port. Both can be nil, then ModSettings will be used.\n\n@*param* `ip` — localhost or 127.0.0.1 or nil\n\n@*param* `port` — port number from 1 to max of 65535 or nil",
                "extends": {
                    "args": [
                        {
                            "desc": "localhost or 127.0.0.1 or nil",
                            "finish": 8570026,
                            "start": 8570024,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "port number from 1 to max of 65535 or nil",
                            "finish": 8570032,
                            "start": 8570028,
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": " Starts a server on ip and port. Both can be nil, then ModSettings will be used.\n\n@*param* `ip` — localhost or 127.0.0.1 or nil\n\n@*param* `port` — port number from 1 to max of 65535 or nil",
                    "finish": 8870007,
                    "start": 8570004,
                    "type": "function",
                    "view": "function SockServer.start(ip: string, port?: number)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 8570023,
                "name": "start",
                "start": 8570013,
                "type": "setfield"
            },
            {
                "desc": " Stops the server.",
                "extends": {
                    "args": [],
                    "desc": " Stops the server.",
                    "finish": 8980007,
                    "start": 8900004,
                    "type": "function",
                    "view": "function SockServer.stop()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 8900022,
                "name": "stop",
                "start": 8900013,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 350046,
                    "start": 350030,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 350018,
                "name": "transform",
                "start": 350004,
                "type": "setfield"
            },
            {
                "desc": " Updates the server by checking for network events and handling them.",
                "extends": {
                    "args": [],
                    "desc": " Updates the server by checking for network events and handling them.",
                    "finish": 9600007,
                    "start": 9220004,
                    "type": "function",
                    "view": "function SockServer.update()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/net/Server.lua",
                "finish": 9220024,
                "name": "update",
                "start": 9220013,
                "type": "setfield"
            }
        ],
        "name": "SockServer",
        "type": "type"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 1160027,
                "start": 1160018,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "extends": {
                    "finish": 1170026,
                    "start": 1170020,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 1170026,
                            "start": 1170020,
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 1170026,
                "name": "x",
                "start": 1170018,
                "type": "doc.field"
            },
            {
                "extends": {
                    "finish": 1180026,
                    "start": 1180020,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 1180026,
                            "start": 1180020,
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 1180026,
                "name": "y",
                "start": 1180018,
                "type": "doc.field"
            }
        ],
        "name": "Transform",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 30022,
                    "start": 30020,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/Ui.lua",
                "finish": 30002,
                "start": 30000,
                "type": "setglobal"
            }
        ],
        "desc": " Ui: NoitaMP UI.\nSee:\n  * ~PlayerList.xml~\n  * ~FoldingMenu.xml~",
        "name": "Ui",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 3670003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 420000,
                    "type": "function",
                    "view": "function Ui.new()\n  -> table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/Ui.lua",
                "finish": 420015,
                "start": 420009,
                "type": "setfield"
            }
        ],
        "name": "Ui.new",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Utils.lua",
                "finish": 100016,
                "start": 100011,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1110035,
                            "start": 1110031,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1190003,
                    "start": 1110000,
                    "type": "function",
                    "view": "function Utils.CopyToClipboard(copy: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Utils.lua",
                "finish": 1110030,
                "name": "CopyToClipboard",
                "start": 1110009,
                "type": "setfield"
            },
            {
                "desc": "https://noita.wiki.gg/wiki/Modding:_Utilities#Easier_entity_debugging",
                "extends": {
                    "args": [
                        {
                            "finish": 560028,
                            "start": 560027,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "https://noita.wiki.gg/wiki/Modding:_Utilities#Easier_entity_debugging",
                    "finish": 980003,
                    "start": 560000,
                    "type": "function",
                    "view": "function Utils.DebugEntity(e: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Utils.lua",
                "finish": 560026,
                "name": "DebugEntity",
                "start": 560009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 250026,
                            "start": 250023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 380003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 250000,
                    "type": "function",
                    "view": "function Utils.IsEmpty(var: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Utils.lua",
                "finish": 250022,
                "name": "IsEmpty",
                "start": 250009,
                "type": "setfield"
            },
            {
                "desc": " Reloads the whole world with a specific seed. No need to restart the game and use magic numbers.\n\n@*param* `seed` — max = 4294967295",
                "extends": {
                    "args": [
                        {
                            "desc": "max = 4294967295",
                            "finish": 1060029,
                            "start": 1060025,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Reloads the whole world with a specific seed. No need to restart the game and use magic numbers.\n\n@*param* `seed` — max = 4294967295",
                    "finish": 1090003,
                    "start": 1060000,
                    "type": "function",
                    "view": "function Utils.ReloadMap(seed: number)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Utils.lua",
                "finish": 1060024,
                "name": "ReloadMap",
                "start": 1060009,
                "type": "setfield"
            },
            {
                "desc": " Wait for n seconds.\n\n@*param* `s` — seconds to wait",
                "extends": {
                    "args": [
                        {
                            "desc": "seconds to wait",
                            "finish": 150022,
                            "start": 150021,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": " Wait for n seconds.\n\n@*param* `s` — seconds to wait",
                    "finish": 230003,
                    "start": 150000,
                    "type": "function",
                    "view": "function Utils.Sleep(s: number)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Utils.lua",
                "finish": 150020,
                "name": "Sleep",
                "start": 150009,
                "type": "setfield"
            },
            {
                "desc": "https://noita.wiki.gg/wiki/Modding:_Utilities#Easier_entity_debugging",
                "extends": {
                    "args": [
                        {
                            "finish": 410022,
                            "start": 410019,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "https://noita.wiki.gg/wiki/Modding:_Utilities#Easier_entity_debugging",
                    "finish": 530003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|unknown"
                        }
                    ],
                    "start": 410000,
                    "type": "function",
                    "view": "function Utils.Str(var: any)\n  -> string|unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Utils.lua",
                "finish": 410018,
                "name": "Str",
                "start": 410009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1000026,
                            "start": 1000023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1020003,
                    "start": 1000000,
                    "type": "function",
                    "view": "function Utils.pformat(var: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/Utils.lua",
                "finish": 1000022,
                "name": "pformat",
                "start": 1000009,
                "type": "setfield"
            }
        ],
        "name": "Utils",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 2050032,
                    "start": 2050016,
                    "type": "select",
                    "view": "Utils"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 2050013,
                "start": 2050008,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 140032,
                    "start": 140016,
                    "type": "select",
                    "view": "Utils"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 140013,
                "start": 140008,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 190068,
                    "start": 190016,
                    "type": "select",
                    "view": "any"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityCacheUtils.lua",
                "finish": 190013,
                "start": 190008,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 170028,
                    "start": 170012,
                    "type": "select",
                    "view": "Utils"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 170009,
                "start": 170004,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 210068,
                    "start": 210016,
                    "type": "select",
                    "view": "any"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntitySerialisationUtils.lua",
                "finish": 210013,
                "start": 210008,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 160028,
                    "start": 160012,
                    "type": "select",
                    "view": "Utils"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 160009,
                "start": 160004,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 200068,
                    "start": 200016,
                    "type": "select",
                    "view": "any"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 200013,
                "start": 200008,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 110028,
                    "start": 110012,
                    "type": "select",
                    "view": "Utils"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 110009,
                "start": 110004,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 150068,
                    "start": 150016,
                    "type": "select",
                    "view": "any"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/NetworkVscUtils.lua",
                "finish": 150013,
                "start": 150008,
                "type": "setglobal"
            }
        ],
        "name": "Utils",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 680007,
                    "start": 680005,
                    "type": "table",
                    "view": "_G"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 680002,
                "start": 680000,
                "type": "setglobal"
            }
        ],
        "desc": "\nA global variable (not a function) that holds the global environment (see [§2.2](http://www.lua.org/manual/5.4/manual.html#2.2)). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-_G)\n",
        "name": "_G",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1730032,
                    "start": 1730023,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 1730032,
                            "start": 1730023,
                            "type": "doc.type.name",
                            "view": "MinaUtils"
                        }
                    ],
                    "view": "MinaUtils"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/MinaUtils.lua",
                "finish": 1730032,
                "start": 1730010,
                "type": "doc.alias"
            }
        ],
        "desc": "Globally accessible MinaUtils in _G.MinaUtils.",
        "fields": [],
        "name": "_G.MinaUtils",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 3670020,
                    "start": 3670011,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3670008,
                "start": 3670000,
                "type": "setglobal"
            }
        ],
        "desc": "\nA global variable (not a function) that holds a string containing the running Lua version.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-_VERSION)\n",
        "name": "_VERSION",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 130028,
                            "start": 130027,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 220003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 130000,
                    "type": "function",
                    "view": "function __genOrderedIndex(t: any)\n  -> table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/globalExtensions.lua",
                "finish": 130026,
                "start": 130009,
                "type": "setglobal"
            }
        ],
        "name": "__genOrderedIndex",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80008,
                    "start": 80006,
                    "type": "table",
                    "view": "string[]"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 80003,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\nCommand-line arguments of Lua Standalone.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-arg)\n",
        "name": "arg",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 200017,
                            "start": 200016,
                            "type": "local",
                            "view": "<T>?"
                        },
                        {
                            "finish": 200026,
                            "start": 200019,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 200031,
                            "start": 200028,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-assert)",
                    "finish": 200036,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 200000,
                    "type": "function",
                    "view": "function assert(v?: <T>, message?: any, ...any)\n  -> <T>\n  2. ...any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 200015,
                "start": 200009,
                "type": "setglobal"
            }
        ],
        "desc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-assert)",
        "name": "assert",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 390027,
                            "start": 390024,
                            "type": "local",
                            "view": "(\"collect\"|\"count\"|\"generational\"|\"incremental\"|\"isrunning\"...(+3))?"
                        },
                        {
                            "finish": 390032,
                            "start": 390029,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-collectgarbage)\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
                    "finish": 390037,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 390000,
                    "type": "function",
                    "view": "function collectgarbage(opt?: \"collect\"|\"count\"|\"generational\"|\"incremental\"|\"isrunning\"...(+3), ...any)\n  -> any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 390023,
                "start": 390009,
                "type": "setglobal"
            }
        ],
        "desc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-collectgarbage)\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
        "name": "collectgarbage",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 7260014,
                    "start": 7180021,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 7180018,
                "start": 7180012,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 7430014,
                    "start": 7350021,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 7350018,
                "start": 7350012,
                "type": "setglobal"
            }
        ],
        "name": "compId",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80014,
                    "start": 80012,
                    "type": "table",
                    "view": "coroutinelib"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 80009,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine)\n",
        "name": "coroutine",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 390027,
                            "start": 390025,
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.close)",
                    "finish": 390032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 390000,
                    "type": "function",
                    "view": "function coroutine.close(co: thread)\n  -> noerror: boolean\n  2. errorobject: any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 390024,
                "start": 390009,
                "type": "setfield"
            }
        ],
        "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.close)",
        "name": "coroutine.close",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 180027,
                            "start": 180026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.create)",
                    "finish": 180032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "thread"
                        }
                    ],
                    "start": 180000,
                    "type": "function",
                    "view": "function coroutine.create(f: fun(...any):...unknown)\n  -> thread"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 180025,
                "start": 180009,
                "type": "setfield"
            }
        ],
        "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.create)",
        "name": "coroutine.create",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 280033,
                            "start": 280031,
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.isyieldable)",
                    "finish": 280038,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 280000,
                    "type": "function",
                    "view": "function coroutine.isyieldable(co?: thread)\n  -> boolean"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 280030,
                "start": 280009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.isyieldable)",
        "name": "coroutine.isyieldable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 500028,
                            "start": 500026,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 500034,
                            "start": 500030,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 500039,
                            "start": 500036,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.resume)",
                    "finish": 500044,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 500000,
                    "type": "function",
                    "view": "function coroutine.resume(co: thread, val1?: any, ...any)\n  -> success: boolean\n  2. ...any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 500025,
                "start": 500009,
                "type": "setfield"
            }
        ],
        "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.resume)",
        "name": "coroutine.resume",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.running)",
                    "finish": 600032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "thread"
                        },
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 600000,
                    "type": "function",
                    "view": "function coroutine.running()\n  -> running: thread\n  2. ismain: boolean"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 600026,
                "start": 600009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.running)",
        "name": "coroutine.running",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 740028,
                            "start": 740026,
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.status)\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                    "finish": 740033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"dead\"|\"normal\"|\"running\"|\"suspended\""
                        }
                    ],
                    "start": 740000,
                    "type": "function",
                    "view": "function coroutine.status(co: thread)\n  -> \"dead\"|\"normal\"|\"running\"|\"suspended\""
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 740025,
                "start": 740009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.status)\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
        "name": "coroutine.status",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 840025,
                            "start": 840024,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.wrap)",
                    "finish": 840030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "start": 840000,
                    "type": "function",
                    "view": "function coroutine.wrap(f: fun(...any):...unknown)\n  -> fun(...any):...unknown"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 840023,
                "start": 840009,
                "type": "setfield"
            }
        ],
        "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.wrap)",
        "name": "coroutine.wrap",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930028,
                            "start": 930025,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.yield)",
                    "finish": 930033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 930000,
                    "type": "function",
                    "view": "(async) function coroutine.yield(...any)\n  -> ...any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 930024,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.yield)",
        "name": "coroutine.yield",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80010,
                    "start": 80008,
                    "type": "table",
                    "view": "debuglib"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 80005,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug)\n",
        "name": "debug",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.debug)",
                    "finish": 330026,
                    "start": 330000,
                    "type": "function",
                    "view": "function debug.debug()"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 330020,
                "start": 330009,
                "type": "setfield"
            }
        ],
        "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.debug)",
        "name": "debug.debug",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 440024,
                            "start": 440023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the environment of object `o` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getfenv)",
                    "finish": 440029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 440000,
                    "type": "function",
                    "view": "function debug.getfenv(o: any)\n  -> table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 440022,
                "start": 440009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the environment of object `o` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getfenv)",
        "name": "debug.getfenv",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 560025,
                            "start": 560023,
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.gethook)",
                    "finish": 560030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function"
                        },
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 560000,
                    "type": "function",
                    "view": "function debug.gethook(co?: thread)\n  -> hook: function\n  2. mask: string\n  3. count: integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 560022,
                "start": 560009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.gethook)",
        "name": "debug.gethook",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 790029,
                            "start": 790023,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 790032,
                            "start": 790031,
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": 790038,
                            "start": 790034,
                            "type": "local",
                            "view": "(string|\"L\"|\"S\"|\"f\"|\"l\"...(+4))?"
                        }
                    ],
                    "desc": "\nReturns a table with information about a function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getinfo)\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                    "finish": 790043,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "debuginfo"
                        }
                    ],
                    "start": 790000,
                    "type": "function",
                    "view": "function debug.getinfo(thread: thread, f: integer|fun(...any):...unknown, what?: string|\"L\"|\"S\"|\"f\"|\"l\"...(+4))\n  -> debuginfo"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 790022,
                "start": 790009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a table with information about a function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getinfo)\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
        "name": "debug.getinfo",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930030,
                            "start": 930024,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 930033,
                            "start": 930032,
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": 930040,
                            "start": 930035,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getlocal)",
                    "finish": 930045,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 930000,
                    "type": "function",
                    "view": "function debug.getlocal(thread: thread, f: integer|fun(...any):...unknown, index: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 930023,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getlocal)",
        "name": "debug.getlocal",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1030034,
                            "start": 1030028,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the metatable of the given value.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getmetatable)",
                    "finish": 1030039,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 1030000,
                    "type": "function",
                    "view": "function debug.getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1030027,
                "start": 1030009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the metatable of the given value.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getmetatable)",
        "name": "debug.getmetatable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns the registry table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getregistry)",
                    "finish": 1120032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 1120000,
                    "type": "function",
                    "view": "function debug.getregistry()\n  -> table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1120026,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the registry table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getregistry)",
        "name": "debug.getregistry",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1240027,
                            "start": 1240026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 1240031,
                            "start": 1240029,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getupvalue)",
                    "finish": 1240036,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1240000,
                    "type": "function",
                    "view": "function debug.getupvalue(f: fun(...any):...unknown, up: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1240025,
                "start": 1240009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getupvalue)",
        "name": "debug.getupvalue",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1390029,
                            "start": 1390028,
                            "type": "local",
                            "view": "userdata"
                        },
                        {
                            "finish": 1390032,
                            "start": 1390031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getuservalue)",
                    "finish": 1390037,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1390000,
                    "type": "function",
                    "view": "function debug.getuservalue(u: userdata, n?: integer)\n  -> any\n  2. boolean"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1390027,
                "start": 1390009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getuservalue)",
        "name": "debug.getuservalue",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1540035,
                            "start": 1540030,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setcstacklimit)",
                    "finish": 1540040,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|integer"
                        }
                    ],
                    "start": 1540000,
                    "type": "function",
                    "view": "function debug.setcstacklimit(limit: integer)\n  -> boolean|integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1540029,
                "start": 1540009,
                "type": "setfield"
            }
        ],
        "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setcstacklimit)",
        "name": "debug.setcstacklimit",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1660029,
                            "start": 1660023,
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": 1660034,
                            "start": 1660031,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setfenv)",
                    "finish": 1660039,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 1660000,
                    "type": "function",
                    "view": "function debug.setfenv(object: <T>, env: table)\n  -> object: <T>"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1660022,
                "start": 1660009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setfenv)",
        "name": "debug.setfenv",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1850029,
                            "start": 1850023,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 1850035,
                            "start": 1850031,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 1850041,
                            "start": 1850037,
                            "type": "local",
                            "view": "string|\"c\"|\"l\"|\"r\""
                        },
                        {
                            "finish": 1850048,
                            "start": 1850043,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given function as a hook.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.sethook)\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                    "finish": 1850053,
                    "start": 1850000,
                    "type": "function",
                    "view": "function debug.sethook(thread: thread, hook: fun(...any):...unknown, mask: string|\"c\"|\"l\"|\"r\", count?: integer)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1850022,
                "start": 1850009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the given function as a hook.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.sethook)\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
        "name": "debug.sethook",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1980030,
                            "start": 1980024,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 1980037,
                            "start": 1980032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1980044,
                            "start": 1980039,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1980051,
                            "start": 1980046,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setlocal)",
                    "finish": 1980056,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1980000,
                    "type": "function",
                    "view": "function debug.setlocal(thread: thread, level: integer, index: integer, value: any)\n  -> name: string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1980023,
                "start": 1980009,
                "type": "setfield"
            }
        ],
        "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setlocal)",
        "name": "debug.setlocal",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2090033,
                            "start": 2090028,
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": 2090039,
                            "start": 2090035,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setmetatable)",
                    "finish": 2090044,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 2090000,
                    "type": "function",
                    "view": "function debug.setmetatable(value: <T>, meta?: table)\n  -> value: <T>"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2090027,
                "start": 2090009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setmetatable)",
        "name": "debug.setmetatable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2200027,
                            "start": 2200026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2200031,
                            "start": 2200029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2200038,
                            "start": 2200033,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setupvalue)",
                    "finish": 2200043,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2200000,
                    "type": "function",
                    "view": "function debug.setupvalue(f: fun(...any):...unknown, up: integer, value: any)\n  -> name: string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2200025,
                "start": 2200009,
                "type": "setfield"
            }
        ],
        "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setupvalue)",
        "name": "debug.setupvalue",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2340033,
                            "start": 2340028,
                            "type": "local",
                            "view": "userdata"
                        },
                        {
                            "finish": 2340040,
                            "start": 2340035,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2340043,
                            "start": 2340042,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setuservalue)",
                    "finish": 2340048,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "userdata"
                        }
                    ],
                    "start": 2340000,
                    "type": "function",
                    "view": "function debug.setuservalue(udata: userdata, value: any, n?: integer)\n  -> udata: userdata"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2340027,
                "start": 2340009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setuservalue)",
        "name": "debug.setuservalue",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2470031,
                            "start": 2470025,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 2470040,
                            "start": 2470033,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2470047,
                            "start": 2470042,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.traceback)",
                    "finish": 2470052,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2470000,
                    "type": "function",
                    "view": "function debug.traceback(thread: thread, message?: any, level?: integer)\n  -> message: string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2470024,
                "start": 2470009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.traceback)",
        "name": "debug.traceback",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2590026,
                            "start": 2590025,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2590029,
                            "start": 2590028,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvalueid)",
                    "finish": 2590034,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "lightuserdata"
                        }
                    ],
                    "start": 2590000,
                    "type": "function",
                    "view": "function debug.upvalueid(f: fun(...any):...unknown, n: integer)\n  -> id: lightuserdata"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2590024,
                "start": 2590009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvalueid)",
        "name": "debug.upvalueid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2710029,
                            "start": 2710027,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2710033,
                            "start": 2710031,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2710037,
                            "start": 2710035,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2710041,
                            "start": 2710039,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvaluejoin)",
                    "finish": 2710046,
                    "start": 2710000,
                    "type": "function",
                    "view": "function debug.upvaluejoin(f1: fun(...any):...unknown, n1: integer, f2: fun(...any):...unknown, n2: integer)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2710026,
                "start": 2710009,
                "type": "setfield"
            }
        ],
        "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvaluejoin)",
        "name": "debug.upvaluejoin",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 480024,
                            "start": 480016,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-dofile)",
                    "finish": 480029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 480000,
                    "type": "function",
                    "view": "function dofile(filename?: string)\n  -> ...any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 480015,
                "start": 480009,
                "type": "setglobal"
            }
        ],
        "desc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-dofile)",
        "name": "dofile",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 40033,
                            "start": 40025,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 40044,
                            "start": 40035,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 110003,
                    "start": 40000,
                    "type": "function",
                    "view": "function enabled_changed(entityId: any, isEnabled: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/lua_component_enabler.lua",
                "finish": 40024,
                "start": 40009,
                "type": "setglobal"
            }
        ],
        "name": "enabled_changed",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 600022,
                            "start": 600015,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 600029,
                            "start": 600024,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-error)",
                    "finish": 600034,
                    "start": 600000,
                    "type": "function",
                    "view": "function error(message: any, level?: integer)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 600014,
                "start": 600009,
                "type": "setglobal"
            }
        ],
        "desc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-error)",
        "name": "error",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 900003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 820000,
                    "type": "function",
                    "view": "function getHighestAliveEntityId()\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/EntityUtils.lua",
                "finish": 820032,
                "start": 820009,
                "type": "setglobal"
            }
        ],
        "name": "getHighestAliveEntityId",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 180003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 20000,
                    "type": "function",
                    "view": "function getNoitaMpRootDirectory()\n  -> string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 20032,
                "start": 20009,
                "type": "setglobal"
            }
        ],
        "name": "getNoitaMpRootDirectory",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 790018,
                            "start": 790017,
                            "type": "local",
                            "view": "(integer|fun(...any):...unknown)?"
                        }
                    ],
                    "desc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getfenv)",
                    "finish": 790023,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 790000,
                    "type": "function",
                    "view": "function getfenv(f?: integer|fun(...any):...unknown)\n  -> table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 790016,
                "start": 790009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getfenv)",
        "name": "getfenv",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 890028,
                            "start": 890022,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getmetatable)",
                    "finish": 890033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 890000,
                    "type": "function",
                    "view": "function getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 890021,
                "start": 890009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getmetatable)",
        "name": "getmetatable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 2340036,
                    "start": 2340018,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/Ui.lua",
                "finish": 2340015,
                "start": 2340012,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 2910036,
                    "start": 2910018,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/Ui.lua",
                "finish": 2910015,
                "start": 2910012,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 3230036,
                    "start": 3230018,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/Ui.lua",
                "finish": 3230015,
                "start": 3230012,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 3540036,
                    "start": 3540018,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/Ui.lua",
                "finish": 3540015,
                "start": 3540012,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 40028,
                    "start": 40010,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/name_tags.lua",
                "finish": 40007,
                "start": 40004,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 100028,
                    "start": 100010,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/nuid_debug.lua",
                "finish": 100007,
                "start": 100004,
                "type": "setglobal"
            }
        ],
        "name": "gui",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 670021,
                    "start": 670015,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/GuidUtils.lua",
                "finish": 670012,
                "start": 670008,
                "type": "setglobal"
            }
        ],
        "name": "guid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 70015,
                            "start": 70014,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70018,
                            "start": 70017,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 90003,
                    "start": 70000,
                    "type": "function",
                    "view": "function init(x: any, y: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/biome/testingRoom.lua",
                "finish": 70013,
                "start": 70009,
                "type": "setglobal"
            }
        ],
        "name": "init",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 260007,
                    "start": 260005,
                    "type": "table",
                    "view": "iolib"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 260002,
                "start": 260000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io)\n",
        "name": "io",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "finish": 510022,
                            "start": 510018,
                            "type": "local",
                            "view": "file*?"
                        }
                    ],
                    "desc": "\nClose `file` or default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.close)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": 510027,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "type": "function.return",
                            "view": "(\"exit\"|\"signal\")?"
                        },
                        {
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 510000,
                    "type": "function",
                    "view": "function io.close(file?: file*)\n  -> suc: boolean?\n  2. exitcode: (\"exit\"|\"signal\")?\n  3. code: integer?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 510017,
                "start": 510009,
                "type": "setfield"
            }
        ],
        "desc": "\nClose `file` or default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.close)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
        "name": "io.close",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nSaves any written data to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.flush)",
                    "finish": 580023,
                    "start": 580000,
                    "type": "function",
                    "view": "function io.flush()"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 580017,
                "start": 580009,
                "type": "setfield"
            }
        ],
        "desc": "\nSaves any written data to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.flush)",
        "name": "io.flush",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "finish": 670022,
                            "start": 670018,
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default input file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.input)",
                    "finish": 670027,
                    "start": 670000,
                    "type": "function",
                    "view": "function io.input(file: string|file*)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 670017,
                "start": 670009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets `file` as the default input file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.input)",
        "name": "io.input",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830026,
                            "start": 830018,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 830031,
                            "start": 830028,
                            "type": "...",
                            "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
                        }
                    ],
                    "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.lines)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": 830036,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():any, ...unknown"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function io.lines(filename?: string, ...string|integer|\"L\"|\"a\"|\"l\"...(+1))\n  -> fun():any, ...unknown"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 830017,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.lines)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
        "name": "io.lines",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950025,
                            "start": 950017,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 950031,
                            "start": 950027,
                            "type": "local",
                            "view": "(\"a\"|\"a+\"|\"a+b\"|\"ab\"|\"r\"...(+7))?"
                        }
                    ],
                    "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.open)\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                    "finish": 950036,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function io.open(filename: string, mode?: \"a\"|\"a+\"|\"a+b\"|\"ab\"|\"r\"...(+7))\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 950016,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.open)\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
        "name": "io.open",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "finish": 1040023,
                            "start": 1040019,
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.output)",
                    "finish": 1040028,
                    "start": 1040000,
                    "type": "function",
                    "view": "function io.output(file: string|file*)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1040018,
                "start": 1040009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets `file` as the default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.output)",
        "name": "io.output",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1190022,
                            "start": 1190018,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1190028,
                            "start": 1190024,
                            "type": "local",
                            "view": "(\"r\"|\"w\")?"
                        }
                    ],
                    "desc": "\nStarts program prog in a separated process.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.popen)\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                    "finish": 1190033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1190000,
                    "type": "function",
                    "view": "function io.popen(prog: string, mode?: \"r\"|\"w\")\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1190017,
                "start": 1190009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2150029,
                            "start": 2150018,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 2470003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table|nil"
                        }
                    ],
                    "start": 2150000,
                    "type": "function",
                    "view": "function io.popen(commandLine: any)\n  -> table|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/ffiExtensions.lua",
                "finish": 2150017,
                "start": 2150009,
                "type": "setfield"
            }
        ],
        "desc": "\nStarts program prog in a separated process.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.popen)\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
        "name": "io.popen",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1300020,
                            "start": 1300017,
                            "type": "...",
                            "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
                        }
                    ],
                    "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.read)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": 1300025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1300000,
                    "type": "function",
                    "view": "function io.read(...string|integer|\"L\"|\"a\"|\"l\"...(+1))\n  -> any\n  2. ...any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1300016,
                "start": 1300009,
                "type": "setfield"
            }
        ],
        "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.read)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
        "name": "io.read",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.tmpfile)",
                    "finish": 1390025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        }
                    ],
                    "start": 1390000,
                    "type": "function",
                    "view": "function io.tmpfile()\n  -> file*"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1390019,
                "start": 1390009,
                "type": "setfield"
            }
        ],
        "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.tmpfile)",
        "name": "io.tmpfile",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "finish": 1540021,
                            "start": 1540017,
                            "type": "local",
                            "view": "file*"
                        }
                    ],
                    "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.type)\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                    "finish": 1540026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"closed file\"|\"file\"|`nil`"
                        }
                    ],
                    "start": 1540000,
                    "type": "function",
                    "view": "function io.type(file: file*)\n  -> \"closed file\"|\"file\"|`nil`"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1540016,
                "start": 1540009,
                "type": "setfield"
            }
        ],
        "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.type)\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
        "name": "io.type",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1630021,
                            "start": 1630018,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.write)",
                    "finish": 1630026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1630000,
                    "type": "function",
                    "view": "function io.write(...any)\n  -> file*\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1630017,
                "start": 1630009,
                "type": "setfield"
            }
        ],
        "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.write)",
        "name": "io.write",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1060017,
                            "start": 1060016,
                            "type": "local",
                            "view": "<T:table>"
                        }
                    ],
                    "desc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the key–value pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-ipairs)",
                    "finish": 1060022,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(table: <V>[], i?: integer):integer, <V>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T:table>"
                        },
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1060000,
                    "type": "function",
                    "view": "function ipairs(t: <T:table>)\n  -> fun(table: <V>[], i?: integer):integer, <V>\n  2. <T:table>\n  3. i: integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1060015,
                "start": 1060009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the key–value pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-ipairs)",
        "name": "ipairs",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 950052,
                    "start": 950047,
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 950011,
                "start": 950000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1000023,
                    "start": 1000018,
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 1000015,
                "start": 1000004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1040022,
                    "start": 1040018,
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 1040015,
                "start": 1040004,
                "type": "setfield"
            }
        ],
        "name": "is_linux",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 940051,
                    "start": 940047,
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 940013,
                "start": 940000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 990024,
                    "start": 990020,
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 990017,
                "start": 990004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1030025,
                    "start": 1030020,
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 1030017,
                "start": 1030004,
                "type": "setfield"
            }
        ],
        "desc": "NoitaMP additions ",
        "name": "is_windows",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1280019,
                            "start": 1280014,
                            "type": "local",
                            "view": "string|function"
                        },
                        {
                            "finish": 1280030,
                            "start": 1280021,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 1280036,
                            "start": 1280032,
                            "type": "local",
                            "view": "(\"b\"|\"bt\"|\"t\")?"
                        },
                        {
                            "finish": 1280041,
                            "start": 1280038,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-load)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "finish": 1280046,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1280000,
                    "type": "function",
                    "view": "function load(chunk: string|function, chunkname?: string, mode?: \"b\"|\"bt\"|\"t\", env?: table)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1280013,
                "start": 1280009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-load)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
        "name": "load",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1410026,
                            "start": 1410018,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 1410032,
                            "start": 1410028,
                            "type": "local",
                            "view": "(\"b\"|\"bt\"|\"t\")?"
                        },
                        {
                            "finish": 1410037,
                            "start": 1410034,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadfile)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "finish": 1410042,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1410000,
                    "type": "function",
                    "view": "function loadfile(filename?: string, mode?: \"b\"|\"bt\"|\"t\", env?: table)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1410017,
                "start": 1410009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadfile)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
        "name": "loadfile",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1540024,
                            "start": 1540020,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1540035,
                            "start": 1540026,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nLoads a chunk from the given string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadstring)",
                    "finish": 1540040,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1540000,
                    "type": "function",
                    "view": "function loadstring(text: string, chunkname?: string)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1540019,
                "start": 1540009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk from the given string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadstring)",
        "name": "loadstring",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 320009,
                    "start": 320007,
                    "type": "table",
                    "view": "mathlib"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 320004,
                "start": 320000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math)\n",
        "name": "math",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430019,
                            "start": 430018,
                            "type": "local",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the absolute value of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.abs)",
                    "finish": 430024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "function math.abs(x: <Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 430017,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the absolute value of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.abs)",
        "name": "math.abs",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 530020,
                            "start": 530019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.acos)",
                    "finish": 530025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 530000,
                    "type": "function",
                    "view": "function math.acos(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 530018,
                "start": 530009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.acos)",
        "name": "math.acos",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 630020,
                            "start": 630019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.asin)",
                    "finish": 630025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 630000,
                    "type": "function",
                    "view": "function math.asin(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 630018,
                "start": 630009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.asin)",
        "name": "math.asin",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 740020,
                            "start": 740019,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 740023,
                            "start": 740022,
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan)",
                    "finish": 740028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 740000,
                    "type": "function",
                    "view": "function math.atan(y: number, x?: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 740018,
                "start": 740009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan)",
        "name": "math.atan",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 860021,
                            "start": 860020,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 860024,
                            "start": 860023,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan2)",
                    "finish": 860029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 860000,
                    "type": "function",
                    "view": "function math.atan2(y: number, x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 860019,
                "start": 860009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan2)",
        "name": "math.atan2",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 960020,
                            "start": 960019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ceil)",
                    "finish": 960025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 960000,
                    "type": "function",
                    "view": "function math.ceil(x: number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 960018,
                "start": 960009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ceil)",
        "name": "math.ceil",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1060019,
                            "start": 1060018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cos)",
                    "finish": 1060024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1060000,
                    "type": "function",
                    "view": "function math.cos(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1060017,
                "start": 1060009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cos)",
        "name": "math.cos",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1170020,
                            "start": 1170019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cosh)",
                    "finish": 1170025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1170000,
                    "type": "function",
                    "view": "function math.cosh(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1170018,
                "start": 1170009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cosh)",
        "name": "math.cosh",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1270019,
                            "start": 1270018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.deg)",
                    "finish": 1270024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1270000,
                    "type": "function",
                    "view": "function math.deg(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1270017,
                "start": 1270009,
                "type": "setfield"
            }
        ],
        "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.deg)",
        "name": "math.deg",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1370019,
                            "start": 1370018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.exp)",
                    "finish": 1370024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1370000,
                    "type": "function",
                    "view": "function math.exp(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1370017,
                "start": 1370009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.exp)",
        "name": "math.exp",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1470021,
                            "start": 1470020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.floor)",
                    "finish": 1470026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1470000,
                    "type": "function",
                    "view": "function math.floor(x: number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1470019,
                "start": 1470009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.floor)",
        "name": "math.floor",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1580020,
                            "start": 1580019,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1580023,
                            "start": 1580022,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.fmod)",
                    "finish": 1580028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1580000,
                    "type": "function",
                    "view": "function math.fmod(x: number, y: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1580018,
                "start": 1580009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.fmod)",
        "name": "math.fmod",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1700021,
                            "start": 1700020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.frexp)",
                    "finish": 1700026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1700000,
                    "type": "function",
                    "view": "function math.frexp(x: number)\n  -> m: number\n  2. e: number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1700019,
                "start": 1700009,
                "type": "setfield"
            }
        ],
        "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.frexp)",
        "name": "math.frexp",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1820021,
                            "start": 1820020,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1820024,
                            "start": 1820023,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ldexp)",
                    "finish": 1820029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1820000,
                    "type": "function",
                    "view": "function math.ldexp(m: number, e: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1820019,
                "start": 1820009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ldexp)",
        "name": "math.ldexp",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1930019,
                            "start": 1930018,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1930025,
                            "start": 1930021,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log)",
                    "finish": 1930030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1930000,
                    "type": "function",
                    "view": "function math.log(x: number, base?: integer)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1930017,
                "start": 1930009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log)",
        "name": "math.log",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2040021,
                            "start": 2040020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log10)",
                    "finish": 2040026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2040000,
                    "type": "function",
                    "view": "function math.log10(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2040019,
                "start": 2040009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log10)",
        "name": "math.log10",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2160019,
                            "start": 2160018,
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": 2160024,
                            "start": 2160021,
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.max)",
                    "finish": 2160029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 2160000,
                    "type": "function",
                    "view": "function math.max(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2160017,
                "start": 2160009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.max)",
        "name": "math.max",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2280019,
                            "start": 2280018,
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": 2280024,
                            "start": 2280021,
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.min)",
                    "finish": 2280029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 2280000,
                    "type": "function",
                    "view": "function math.min(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2280017,
                "start": 2280009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.min)",
        "name": "math.min",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2390020,
                            "start": 2390019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.modf)",
                    "finish": 2390025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2390000,
                    "type": "function",
                    "view": "function math.modf(x: number)\n  -> integer\n  2. number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2390018,
                "start": 2390009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.modf)",
        "name": "math.modf",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2510019,
                            "start": 2510018,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 2510022,
                            "start": 2510021,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `x ^ y` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.pow)",
                    "finish": 2510027,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2510000,
                    "type": "function",
                    "view": "function math.pow(x: number, y: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2510017,
                "start": 2510009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `x ^ y` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.pow)",
        "name": "math.pow",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2610019,
                            "start": 2610018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.rad)",
                    "finish": 2610024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2610000,
                    "type": "function",
                    "view": "function math.rad(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2610017,
                "start": 2610009,
                "type": "setfield"
            }
        ],
        "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.rad)",
        "name": "math.rad",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2770022,
                            "start": 2770021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2770025,
                            "start": 2770024,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.random)",
                    "finish": 2770030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2770000,
                    "type": "function",
                    "view": "function math.random(m: integer, n: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2770020,
                "start": 2770009,
                "type": "setfield"
            }
        ],
        "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.random)",
        "name": "math.random",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2890026,
                            "start": 2890025,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 2890029,
                            "start": 2890028,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.randomseed)",
                    "finish": 2890034,
                    "start": 2890000,
                    "type": "function",
                    "view": "function math.randomseed(x?: integer, y?: integer)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2890024,
                "start": 2890009,
                "type": "setfield"
            }
        ],
        "desc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.randomseed)",
        "name": "math.randomseed",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 190021,
                            "start": 190020,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 190030,
                            "start": 190023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": " This way, you can round on any bracket:\n math.round(119.68, 6.4) -- 121.6 (= 19 * 6.4)\n It works for \"number of decimals\" too, with a rather visual representation:\n math.round(119.68, 0.01) -- 119.68\n math.round(119.68, 0.1) -- 119.7\n math.round(119.68) -- 120\n math.round(119.68, 100) -- 100\n math.round(119.68, 1000) -- 0",
                    "finish": 280003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 190000,
                    "type": "function",
                    "view": "function math.round(v: any, bracket: any)\n  -> unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/mathExtensions.lua",
                "finish": 190019,
                "start": 190009,
                "type": "setfield"
            }
        ],
        "desc": " This way, you can round on any bracket:\n math.round(119.68, 6.4) -- 121.6 (= 19 * 6.4)\n It works for \"number of decimals\" too, with a rather visual representation:\n math.round(119.68, 0.01) -- 119.68\n math.round(119.68, 0.1) -- 119.7\n math.round(119.68) -- 120\n math.round(119.68, 100) -- 100\n math.round(119.68, 1000) -- 0",
        "name": "math.round",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 40020,
                            "start": 40019,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 90003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 40000,
                    "type": "function",
                    "view": "function math.sign(v: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/mathExtensions.lua",
                "finish": 40018,
                "start": 40009,
                "type": "setfield"
            }
        ],
        "name": "math.sign",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2990019,
                            "start": 2990018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sin)",
                    "finish": 2990024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2990000,
                    "type": "function",
                    "view": "function math.sin(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2990017,
                "start": 2990009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sin)",
        "name": "math.sin",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3100020,
                            "start": 3100019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sinh)",
                    "finish": 3100025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3100000,
                    "type": "function",
                    "view": "function math.sinh(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3100018,
                "start": 3100009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sinh)",
        "name": "math.sinh",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3200020,
                            "start": 3200019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the square root of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sqrt)",
                    "finish": 3200025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3200000,
                    "type": "function",
                    "view": "function math.sqrt(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3200018,
                "start": 3200009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the square root of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sqrt)",
        "name": "math.sqrt",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3300019,
                            "start": 3300018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tan)",
                    "finish": 3300024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3300000,
                    "type": "function",
                    "view": "function math.tan(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3300017,
                "start": 3300009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tan)",
        "name": "math.tan",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3410020,
                            "start": 3410019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tanh)",
                    "finish": 3410025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3410000,
                    "type": "function",
                    "view": "function math.tanh(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3410018,
                "start": 3410009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tanh)",
        "name": "math.tanh",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3520025,
                            "start": 3520024,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nIf the value `x` is convertible to an integer, returns that integer.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tointeger)",
                    "finish": 3520030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 3520000,
                    "type": "function",
                    "view": "function math.tointeger(x: any)\n  -> integer?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3520023,
                "start": 3520009,
                "type": "setfield"
            }
        ],
        "desc": "\nIf the value `x` is convertible to an integer, returns that integer.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tointeger)",
        "name": "math.tointeger",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3650020,
                            "start": 3650019,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns `\"integer\"` if `x` is an integer, `\"float\"` if it is a float, or `nil` if `x` is not a number.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.type)\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                    "finish": 3650025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"float\"|\"integer\"|'nil'"
                        }
                    ],
                    "start": 3650000,
                    "type": "function",
                    "view": "function math.type(x: any)\n  -> \"float\"|\"integer\"|'nil'"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3650018,
                "start": 3650009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `\"integer\"` if `x` is an integer, `\"float\"` if it is a float, or `nil` if `x` is not a number.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.type)\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
        "name": "math.type",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3760019,
                            "start": 3760018,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3760022,
                            "start": 3760021,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns `true` if and only if `m` is below `n` when they are compared as unsigned integers.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ult)",
                    "finish": 3760027,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 3760000,
                    "type": "function",
                    "view": "function math.ult(m: integer, n: integer)\n  -> boolean"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3760017,
                "start": 3760009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `true` if and only if `m` is below `n` when they are compared as unsigned integers.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ult)",
        "name": "math.ult",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1690020,
                            "start": 1690016,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1690025,
                            "start": 1690022,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nCreates a module.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-module)",
                    "finish": 1690030,
                    "start": 1690000,
                    "type": "function",
                    "view": "function module(name: string, ...any)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1690015,
                "start": 1690009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCreates a module.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-module)",
        "name": "module",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 170018,
                    "start": 170007,
                    "type": "binary",
                    "view": "nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/name_tags.lua",
                "finish": 170004,
                "start": 170000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 220061,
                    "start": 220019,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/noita-components/name_tags.lua",
                "finish": 220016,
                "start": 220012,
                "type": "setglobal"
            }
        ],
        "name": "name",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1600023,
                            "start": 1600018,
                            "type": "local",
                            "view": "boolean|table|userdata"
                        }
                    ],
                    "finish": 1600028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "userdata"
                        }
                    ],
                    "start": 1600000,
                    "type": "function",
                    "view": "function newproxy(proxy: boolean|table|userdata)\n  -> userdata"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1600017,
                "start": 1600009,
                "type": "setglobal"
            }
        ],
        "name": "newproxy",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1870019,
                            "start": 1870014,
                            "type": "local",
                            "view": "table<<K>, <V>>"
                        },
                        {
                            "finish": 1870026,
                            "start": 1870021,
                            "type": "local",
                            "view": "<K>?"
                        }
                    ],
                    "desc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-next)",
                    "finish": 1870031,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<K>?"
                        },
                        {
                            "type": "function.return",
                            "view": "<V>?"
                        }
                    ],
                    "start": 1870000,
                    "type": "function",
                    "view": "function next(table: table<<K>, <V>>, index?: <K>)\n  -> <K>?\n  2. <V>?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1870013,
                "start": 1870009,
                "type": "setglobal"
            }
        ],
        "desc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-next)",
        "name": "next",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 240022,
                            "start": 240021,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 240029,
                            "start": 240024,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 510003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown|nil"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown|nil"
                        }
                    ],
                    "start": 240000,
                    "type": "function",
                    "view": "function orderedNext(t: any, state: any)\n  -> unknown|nil\n  2. unknown|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/globalExtensions.lua",
                "finish": 240020,
                "start": 240009,
                "type": "setglobal"
            }
        ],
        "name": "orderedNext",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 530023,
                            "start": 530022,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 570003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 530000,
                    "type": "function",
                    "view": "function orderedPairs(t: any)\n  -> function\n  2. unknown\n  3. nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/globalExtensions.lua",
                "finish": 530021,
                "start": 530009,
                "type": "setglobal"
            }
        ],
        "name": "orderedPairs",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80007,
                    "start": 80005,
                    "type": "table",
                    "view": "oslib"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 80002,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os)\n",
        "name": "os",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.clock)",
                    "finish": 170023,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 170000,
                    "type": "function",
                    "view": "function os.clock()\n  -> number"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 170017,
                "start": 170009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.clock)",
        "name": "os.clock",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 840023,
                            "start": 840017,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 840029,
                            "start": 840025,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.date)",
                    "finish": 840034,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|osdate"
                        }
                    ],
                    "start": 840000,
                    "type": "function",
                    "view": "function os.date(format?: string, time?: integer)\n  -> string|osdate"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 840016,
                "start": 840009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.date)",
        "name": "os.date",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950023,
                            "start": 950021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 950027,
                            "start": 950025,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.difftime)",
                    "finish": 950032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function os.difftime(t2: integer, t1: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 950020,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.difftime)",
        "name": "os.difftime",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1060027,
                            "start": 1060020,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.execute)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": 1060032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "type": "function.return",
                            "view": "(\"exit\"|\"signal\")?"
                        },
                        {
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 1060000,
                    "type": "function",
                    "view": "function os.execute(command?: string)\n  -> suc: boolean?\n  2. exitcode: (\"exit\"|\"signal\")?\n  3. code: integer?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1060019,
                "start": 1060009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1080031,
                            "start": 1080020,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1240003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1080000,
                    "type": "function",
                    "view": "function os.execute(commandLine: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/ffiExtensions.lua",
                "finish": 1080019,
                "start": 1080009,
                "type": "setfield"
            }
        ],
        "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.execute)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
        "name": "os.execute",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1150021,
                            "start": 1150017,
                            "type": "local",
                            "view": "(boolean|integer)?"
                        },
                        {
                            "finish": 1150028,
                            "start": 1150023,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.exit)",
                    "finish": 1150033,
                    "start": 1150000,
                    "type": "function",
                    "view": "function os.exit(code?: boolean|integer, close?: boolean)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1150016,
                "start": 1150009,
                "type": "setfield"
            }
        ],
        "desc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.exit)",
        "name": "os.exit",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1250026,
                            "start": 1250019,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.getenv)",
                    "finish": 1250031,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1250000,
                    "type": "function",
                    "view": "function os.getenv(varname: string)\n  -> string?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1250018,
                "start": 1250009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.getenv)",
        "name": "os.getenv",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1350027,
                            "start": 1350019,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDeletes the file with the given name.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.remove)",
                    "finish": 1350032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1350000,
                    "type": "function",
                    "view": "function os.remove(filename: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1350018,
                "start": 1350009,
                "type": "setfield"
            }
        ],
        "desc": "\nDeletes the file with the given name.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.remove)",
        "name": "os.remove",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1460026,
                            "start": 1460019,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1460035,
                            "start": 1460028,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.rename)",
                    "finish": 1460040,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1460000,
                    "type": "function",
                    "view": "function os.rename(oldname: string, newname: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1460018,
                "start": 1460009,
                "type": "setfield"
            }
        ],
        "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.rename)",
        "name": "os.rename",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1640028,
                            "start": 1640022,
                            "type": "local",
                            "view": "string|nil"
                        },
                        {
                            "finish": 1640038,
                            "start": 1640030,
                            "type": "local",
                            "view": "(\"all\"|\"collate\"|\"ctype\"|\"monetary\"|\"numeric\"...(+1))?"
                        }
                    ],
                    "desc": "\nSets the current locale of the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.setlocale)\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                    "finish": 1640043,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1640000,
                    "type": "function",
                    "view": "function os.setlocale(locale: string|nil, category?: \"all\"|\"collate\"|\"ctype\"|\"monetary\"|\"numeric\"...(+1))\n  -> localecategory: string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1640021,
                "start": 1640009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the current locale of the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.setlocale)\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
        "name": "os.setlocale",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1740021,
                            "start": 1740017,
                            "type": "local",
                            "view": "osdate?"
                        }
                    ],
                    "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.time)",
                    "finish": 1740026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1740000,
                    "type": "function",
                    "view": "function os.time(date?: osdate)\n  -> integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1740016,
                "start": 1740009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.time)",
        "name": "os.time",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.tmpname)",
                    "finish": 1830025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1830000,
                    "type": "function",
                    "view": "function os.tmpname()\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1830019,
                "start": 1830009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.tmpname)",
        "name": "os.tmpname",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1080039,
                    "start": 1080019,
                    "type": "getlocal",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 1080010,
                "start": 1080000,
                "type": "setfield"
            }
        ],
        "name": "os_arch",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1070035,
                    "start": 1070019,
                    "type": "getlocal",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 1070010,
                "start": 1070000,
                "type": "setfield"
            }
        ],
        "name": "os_name",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 420012,
                    "start": 420010,
                    "type": "table",
                    "view": "packagelib"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 420007,
                "start": 420000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package)\n",
        "name": "package",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 540003,
                    "start": 490017,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 490014,
                "start": 490000,
                "type": "setfield"
            }
        ],
        "desc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.config)\n",
        "name": "package.config",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 390056,
                    "start": 360016,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 360013,
                "start": 360000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1600070,
                    "start": 1600020,
                    "type": "select",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 1600017,
                "start": 1600004,
                "type": "setfield"
            }
        ],
        "name": "package.cpath",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 620020,
                    "start": 620018,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 620015,
                "start": 620000,
                "type": "setfield"
            }
        ],
        "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.loaders)\n",
        "name": "package.loaders",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 720032,
                            "start": 720025,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 720042,
                            "start": 720034,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.loadlib)",
                    "finish": 720047,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 720000,
                    "type": "function",
                    "view": "function package.loadlib(libname: string, funcname: string)\n  -> any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 720024,
                "start": 720009,
                "type": "setfield"
            }
        ],
        "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.loadlib)",
        "name": "package.loadlib",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 250034,
                    "start": 250015,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 250012,
                "start": 250000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 270095,
                    "start": 270015,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 270012,
                "start": 270000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 280085,
                    "start": 280015,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 280012,
                "start": 280000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 300086,
                    "start": 300015,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 300012,
                "start": 300000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 310087,
                    "start": 310015,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 310012,
                "start": 310000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 320076,
                    "start": 320015,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 320012,
                "start": 320000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 330077,
                    "start": 330015,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 330012,
                "start": 330000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 880035,
                    "start": 880015,
                    "type": "getlocal",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 880012,
                "start": 880000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1590070,
                    "start": 1590020,
                    "type": "select",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 1590016,
                "start": 1590004,
                "type": "setfield"
            }
        ],
        "desc": " [[ LuaRocks modules ]]--",
        "name": "package.path",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 800022,
                    "start": 800020,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 800017,
                "start": 800000,
                "type": "setfield"
            }
        ],
        "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.searchers)\n",
        "name": "package.searchers",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950032,
                            "start": 950028,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 950038,
                            "start": 950034,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 950043,
                            "start": 950040,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 950048,
                            "start": 950045,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.searchpath)",
                    "finish": 950053,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string?"
                        },
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function package.searchpath(name: string, path: string, sep?: string, rep?: string)\n  -> filename: string?\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 950027,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.searchpath)",
        "name": "package.searchpath",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1040030,
                            "start": 1040024,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.seeall)",
                    "finish": 1040035,
                    "start": 1040000,
                    "type": "function",
                    "view": "function package.seeall(module: table)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 1040023,
                "start": 1040009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.seeall)",
        "name": "package.seeall",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2070016,
                            "start": 2070015,
                            "type": "local",
                            "view": "<T:table>"
                        }
                    ],
                    "desc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all key–value pairs of table `t`.\n\nSee function [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) for the caveats of modifying the table during its traversal.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pairs)",
                    "finish": 2070021,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(table: table<<K>, <V>>, index?: <K>):<K>, <V>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T:table>"
                        }
                    ],
                    "start": 2070000,
                    "type": "function",
                    "view": "function pairs(t: <T:table>)\n  -> fun(table: table<<K>, <V>>, index?: <K>):<K>, <V>\n  2. <T:table>"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2070014,
                "start": 2070009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all key–value pairs of table `t`.\n\nSee function [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) for the caveats of modifying the table during its traversal.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pairs)",
        "name": "pairs",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 960081,
                    "start": 960047,
                    "type": "select",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 960016,
                "start": 960000,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1010027,
                    "start": 1010023,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 1010020,
                "start": 1010004,
                "type": "setfield"
            },
            {
                "extends": {
                    "finish": 1050026,
                    "start": 1050023,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_package_loading.lua",
                "finish": 1050020,
                "start": 1050004,
                "type": "setfield"
            }
        ],
        "name": "pathSeparator",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2200016,
                            "start": 2200015,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2200022,
                            "start": 2200018,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2200027,
                            "start": 2200024,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pcall)",
                    "finish": 2200032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2200000,
                    "type": "function",
                    "view": "function pcall(f: fun(...any):...unknown, arg1?: any, ...any)\n  -> success: boolean\n  2. result: any\n  3. ...any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2200014,
                "start": 2200009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pcall)",
        "name": "pcall",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2290018,
                            "start": 2290015,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](http://www.lua.org/manual/5.4/manual.html#pdf-tostring).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format) and [io.write](http://www.lua.org/manual/5.4/manual.html#pdf-io.write).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-print)",
                    "finish": 2290023,
                    "start": 2290000,
                    "type": "function",
                    "view": "function print(...any)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2290014,
                "start": 2290009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](http://www.lua.org/manual/5.4/manual.html#pdf-tostring).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format) and [io.write](http://www.lua.org/manual/5.4/manual.html#pdf-io.write).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-print)",
        "name": "print",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2400020,
                            "start": 2400018,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2400024,
                            "start": 2400022,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawequal)",
                    "finish": 2400029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2400000,
                    "type": "function",
                    "view": "function rawequal(v1: any, v2: any)\n  -> boolean"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2400017,
                "start": 2400009,
                "type": "setglobal"
            }
        ],
        "desc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawequal)",
        "name": "rawequal",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2510021,
                            "start": 2510016,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 2510028,
                            "start": 2510023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawget)",
                    "finish": 2510033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2510000,
                    "type": "function",
                    "view": "function rawget(table: table, index: any)\n  -> any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2510015,
                "start": 2510009,
                "type": "setglobal"
            }
        ],
        "desc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawget)",
        "name": "rawget",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2610017,
                            "start": 2610016,
                            "type": "local",
                            "view": "string|table"
                        }
                    ],
                    "desc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawlen)",
                    "finish": 2610022,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2610000,
                    "type": "function",
                    "view": "function rawlen(v: string|table)\n  -> len: integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2610015,
                "start": 2610009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawlen)",
        "name": "rawlen",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2740021,
                            "start": 2740016,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 2740028,
                            "start": 2740023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2740035,
                            "start": 2740030,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawset)",
                    "finish": 2740040,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 2740000,
                    "type": "function",
                    "view": "function rawset(table: table, index: any, value: any)\n  -> table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2740015,
                "start": 2740009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawset)",
        "name": "rawset",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 100024,
                            "start": 100017,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-require)",
                    "finish": 100029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 100000,
                    "type": "function",
                    "view": "function require(modname: string)\n  -> unknown\n  2. loaderdata: unknown"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 100016,
                "start": 100009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-require)",
        "name": "require",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2840021,
                            "start": 2840016,
                            "type": "local",
                            "view": "integer|\"#\""
                        },
                        {
                            "finish": 2840026,
                            "start": 2840023,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-select)\n\n\n```lua\nindex:\n    | \"#\"\n```",
                    "finish": 2840031,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2840000,
                    "type": "function",
                    "view": "function select(index: integer|\"#\", ...any)\n  -> any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2840015,
                "start": 2840009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-select)\n\n\n```lua\nindex:\n    | \"#\"\n```",
        "name": "select",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2950018,
                            "start": 2950017,
                            "type": "local",
                            "view": "fun(...any):...integer|unknown"
                        },
                        {
                            "finish": 2950025,
                            "start": 2950020,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment to be used by the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setfenv)",
                    "finish": 2950030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function"
                        }
                    ],
                    "start": 2950000,
                    "type": "function",
                    "view": "function setfenv(f: fun(...any):...integer|unknown, table: table)\n  -> function"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2950016,
                "start": 2950009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the environment to be used by the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setfenv)",
        "name": "setfenv",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3100027,
                            "start": 3100022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 3100038,
                            "start": 3100029,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([§6.10](http://www.lua.org/manual/5.4/manual.html#6.10)).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setmetatable)",
                    "finish": 3100043,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 3100000,
                    "type": "function",
                    "view": "function setmetatable(table: table, metatable?: table)\n  -> table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3100021,
                "start": 3100009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([§6.10](http://www.lua.org/manual/5.4/manual.html#6.10)).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setmetatable)",
        "name": "setmetatable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4800075,
                    "start": 4800025,
                    "type": "select",
                    "view": "string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/util/FileUtils.lua",
                "finish": 4800020,
                "start": 4800008,
                "type": "setfield"
            }
        ],
        "name": "seven_zip",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 110024,
                            "start": 110023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 110027,
                            "start": 110026,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 130003,
                    "start": 110000,
                    "type": "function",
                    "view": "function spawn_enemy_a(x: any, y: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/biome/testingRoom.lua",
                "finish": 110022,
                "start": 110009,
                "type": "setglobal"
            }
        ],
        "name": "spawn_enemy_a",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 150024,
                            "start": 150023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 150027,
                            "start": 150026,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 170003,
                    "start": 150000,
                    "type": "function",
                    "view": "function spawn_enemy_b(x: any, y: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/biome/testingRoom.lua",
                "finish": 150022,
                "start": 150009,
                "type": "setglobal"
            }
        ],
        "name": "spawn_enemy_b",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 190034,
                    "start": 190000,
                    "type": "function",
                    "view": "function spawn_small_enemies()"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/biome/testingRoom.lua",
                "finish": 190028,
                "start": 190009,
                "type": "setglobal"
            }
        ],
        "name": "spawn_small_enemies",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 5560049,
                    "start": 5560025,
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 5560022,
                "start": 5560012,
                "type": "setfield"
            }
        ],
        "name": "stack._top",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80011,
                    "start": 80009,
                    "type": "table",
                    "view": "stringlib"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 80006,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string)\n",
        "name": "string",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "any string you want to extend or cut",
                            "finish": 80047,
                            "start": 80044,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 80055,
                            "start": 80049,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 80061,
                            "start": 80057,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 80076,
                            "start": 80063,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `var` — any string you want to extend or cut\n\n Extends @var to the @length with @char. Example 1: \"test\", 6, \" \" = \"test  \" | Example 2: \"verylongstring\", 5, \" \" = \"veryl\"",
                    "finish": 410003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 80035,
                    "type": "function",
                    "view": "function string.ExtendOrCutStringToLength(var: string, length: number, char: any, makeItVisible?: boolean)\n  -> string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/stringExtensions.lua",
                "finish": 80032,
                "start": 80000,
                "type": "setfield"
            }
        ],
        "desc": "@*param* `var` — any string you want to extend or cut\n\n Extends @var to the @length with @char. Example 1: \"test\", 6, \" \" = \"test  \" | Example 2: \"verylongstring\", 5, \" \" = \"veryl\"",
        "name": "string.ExtendOrCutStringToLength",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 200022,
                            "start": 200021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 200025,
                            "start": 200024,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 200028,
                            "start": 200027,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.byte)",
                    "finish": 200033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 200000,
                    "type": "function",
                    "view": "function string.byte(s: string|number, i?: integer, j?: integer)\n  -> ...integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 200020,
                "start": 200009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.byte)",
        "name": "string.byte",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 310025,
                            "start": 310021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 310030,
                            "start": 310027,
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.char)",
                    "finish": 310035,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 310000,
                    "type": "function",
                    "view": "function string.char(byte: integer, ...integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 310020,
                "start": 310009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.char)",
        "name": "string.char",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "String",
                            "finish": 780047,
                            "start": 780044,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "String, Char, Regex",
                            "finish": 780056,
                            "start": 780049,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `str` — String\n\n@*param* `pattern` — String, Char, Regex\n\n@*return* `found` — 'true' if found, else 'false'.\n\n Contains on lower case",
                    "finish": 920003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 780035,
                    "type": "function",
                    "view": "function string.contains(str: string, pattern: string)\n  -> found: boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/stringExtensions.lua",
                "finish": 780015,
                "start": 780000,
                "type": "setfield"
            }
        ],
        "desc": "@*param* `str` — String\n\n@*param* `pattern` — String, Char, Regex\n\n@*return* `found` — 'true' if found, else 'false'.\n\n Contains on lower case",
        "name": "string.contains",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 420022,
                            "start": 420021,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 420029,
                            "start": 420024,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.dump)",
                    "finish": 420034,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 420000,
                    "type": "function",
                    "view": "function string.dump(f: fun(...any):...unknown, strip?: boolean)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 420020,
                "start": 420009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.dump)",
        "name": "string.dump",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 570022,
                            "start": 570021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 570031,
                            "start": 570024,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 570037,
                            "start": 570033,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 570044,
                            "start": 570039,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.find)\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` — captured",
                    "finish": 570049,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 570000,
                    "type": "function",
                    "view": "function string.find(s: string|number, pattern: string|number, init?: integer, plain?: boolean)\n  -> start: integer\n  2. end: integer\n  3. ...any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 570020,
                "start": 570009,
                "type": "setfield"
            }
        ],
        "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.find)\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` — captured",
        "name": "string.find",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 680024,
                            "start": 680023,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 680029,
                            "start": 680026,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.format)",
                    "finish": 680034,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 680000,
                    "type": "function",
                    "view": "function string.format(s: string|number, ...any)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 680022,
                "start": 680009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.format)",
        "name": "string.format",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 890024,
                            "start": 890023,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 890033,
                            "start": 890026,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 890039,
                            "start": 890035,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gmatch)",
                    "finish": 890044,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():string, ...unknown"
                        }
                    ],
                    "start": 890000,
                    "type": "function",
                    "view": "function string.gmatch(s: string|number, pattern: string|number, init?: integer)\n  -> fun():string, ...unknown"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 890022,
                "start": 890009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gmatch)",
        "name": "string.gmatch",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1030022,
                            "start": 1030021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1030031,
                            "start": 1030024,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1030037,
                            "start": 1030033,
                            "type": "local",
                            "view": "string|number|function|table"
                        },
                        {
                            "finish": 1030040,
                            "start": 1030039,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) have been replaced by a replacement string specified by `repl`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gsub)",
                    "finish": 1030045,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1030000,
                    "type": "function",
                    "view": "function string.gsub(s: string|number, pattern: string|number, repl: string|number|function|table, n?: integer)\n  -> string\n  2. count: integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1030020,
                "start": 1030009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) have been replaced by a replacement string specified by `repl`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gsub)",
        "name": "string.gsub",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1130021,
                            "start": 1130020,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns its length.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.len)",
                    "finish": 1130026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1130000,
                    "type": "function",
                    "view": "function string.len(s: string|number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1130019,
                "start": 1130009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns its length.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.len)",
        "name": "string.len",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1230023,
                            "start": 1230022,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.lower)",
                    "finish": 1230028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1230000,
                    "type": "function",
                    "view": "function string.lower(s: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1230021,
                "start": 1230009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.lower)",
        "name": "string.lower",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1350023,
                            "start": 1350022,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1350032,
                            "start": 1350025,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1350038,
                            "start": 1350034,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.match)",
                    "finish": 1350043,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1350000,
                    "type": "function",
                    "view": "function string.match(s: string|number, pattern: string|number, init?: integer)\n  -> ...any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1350021,
                "start": 1350009,
                "type": "setfield"
            }
        ],
        "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.match)",
        "name": "string.match",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1480024,
                            "start": 1480021,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1480028,
                            "start": 1480026,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1480032,
                            "start": 1480030,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1480037,
                            "start": 1480034,
                            "type": "...",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.pack)",
                    "finish": 1480042,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1480000,
                    "type": "function",
                    "view": "function string.pack(fmt: string, v1: string|number, v2: any, ...string|number)\n  -> binary: string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1480020,
                "start": 1480009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.pack)",
        "name": "string.pack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1590028,
                            "start": 1590025,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.packsize)",
                    "finish": 1590033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1590000,
                    "type": "function",
                    "view": "function string.packsize(fmt: string)\n  -> integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1590024,
                "start": 1590009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.packsize)",
        "name": "string.packsize",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1710021,
                            "start": 1710020,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1710024,
                            "start": 1710023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1710029,
                            "start": 1710026,
                            "type": "local",
                            "view": "(string|number)?"
                        }
                    ],
                    "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.rep)",
                    "finish": 1710034,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1710000,
                    "type": "function",
                    "view": "function string.rep(s: string|number, n: integer, sep?: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1710019,
                "start": 1710009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.rep)",
        "name": "string.rep",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1810025,
                            "start": 1810024,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.reverse)",
                    "finish": 1810030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1810000,
                    "type": "function",
                    "view": "function string.reverse(s: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1810023,
                "start": 1810009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.reverse)",
        "name": "string.reverse",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 550047,
                            "start": 550044,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 550052,
                            "start": 550049,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 720003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 550035,
                    "type": "function",
                    "view": "function string.split(str: any, pat: any)\n  -> table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/stringExtensions.lua",
                "finish": 550012,
                "start": 550000,
                "type": "setfield"
            }
        ],
        "desc": " http://lua-users.org/wiki/SplitJoin\n Function: Split a string with a pattern, Take Two\n Compatibility: Lua-5.1",
        "name": "string.split",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1930021,
                            "start": 1930020,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1930024,
                            "start": 1930023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1930027,
                            "start": 1930026,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.sub)",
                    "finish": 1930032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1930000,
                    "type": "function",
                    "view": "function string.sub(s: string|number, i: integer, j?: integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1930019,
                "start": 1930009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.sub)",
        "name": "string.sub",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430045,
                            "start": 430044,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 500003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 430035,
                    "type": "function",
                    "view": "function string.trim(s: any)\n  -> string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/stringExtensions.lua",
                "finish": 430011,
                "start": 430000,
                "type": "setfield"
            }
        ],
        "name": "string.trim",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2070026,
                            "start": 2070023,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 2070029,
                            "start": 2070028,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 2070034,
                            "start": 2070031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.unpack)",
                    "finish": 2070039,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2070000,
                    "type": "function",
                    "view": "function string.unpack(fmt: string, s: string, pos?: integer)\n  -> ...any\n  2. offset: integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 2070022,
                "start": 2070009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.unpack)",
        "name": "string.unpack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2170023,
                            "start": 2170022,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.upper)",
                    "finish": 2170028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2170000,
                    "type": "function",
                    "view": "function string.upper(s: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 2170021,
                "start": 2170009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.upper)",
        "name": "string.upper",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80010,
                    "start": 80008,
                    "type": "table",
                    "view": "tablelib"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 80005,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table)\n",
        "name": "table",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 210026,
                            "start": 210022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 210031,
                            "start": 210028,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 210034,
                            "start": 210033,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 210037,
                            "start": 210036,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.concat)",
                    "finish": 210042,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 210000,
                    "type": "function",
                    "view": "function table.concat(list: table, sep?: string, i?: integer, j?: integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 210021,
                "start": 210009,
                "type": "setfield"
            }
        ],
        "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.concat)",
        "name": "table.concat",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Table to check.",
                            "finish": 70032,
                            "start": 70029,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "Number(index) or String(name matching) for indexing the table.",
                            "finish": 70037,
                            "start": 70034,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "@*param* `tbl` — Table to check.\n\n@*param* `key` — Number(index) or String(name matching) for indexing the table.\n\n@*return* `true` — if indexing by key does not return nil\n\n@*return* `index` — also returns the index of the found key\n\n Return true, if the key is contained in the tbl. NOTE: Doesn't check for duplicates inside the table.",
                    "finish": 200003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 70020,
                    "type": "function",
                    "view": "function table.contains(tbl: table, key: any)\n  -> true: boolean\n  2. index: number"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 70014,
                "start": 70000,
                "type": "setfield"
            }
        ],
        "desc": "@*param* `tbl` — Table to check.\n\n@*param* `key` — Number(index) or String(name matching) for indexing the table.\n\n@*return* `true` — if indexing by key does not return nil\n\n@*return* `index` — also returns the index of the found key\n\n Return true, if the key is contained in the tbl. NOTE: Doesn't check for duplicates inside the table.",
        "name": "table.contains",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The table to check within for the values passed in the following parameters.",
                            "finish": 270032,
                            "start": 270029,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 270037,
                            "start": 270034,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "@*param* `tbl` — The table to check within for the values passed in the following parameters.\n\n@*return* `true` — if all the values were in the table.\n\n https://gist.github.com/HoraceBury/9307117#file-tablelib-lua-L293-L313\n Returns true if all the arg parameters are contained in the tbl.",
                    "finish": 380003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 270020,
                    "type": "function",
                    "view": "function table.containsAll(tbl: table, ...any)\n  -> true: boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 270017,
                "start": 270000,
                "type": "setfield"
            }
        ],
        "desc": "@*param* `tbl` — The table to check within for the values passed in the following parameters.\n\n@*return* `true` — if all the values were in the table.\n\n https://gist.github.com/HoraceBury/9307117#file-tablelib-lua-L293-L313\n Returns true if all the arg parameters are contained in the tbl.",
        "name": "table.containsAll",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Example: { \"Name\", 2, 234, \"string\" }",
                            "finish": 2000034,
                            "start": 2000031,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": " We need a simple and 'fast' way to convert a lua table into a string.\n\n@*param* `tbl` — Example: { \"Name\", 2, 234, \"string\" }\n\n@*return* `Example` — Name,2,234,string",
                    "finish": 2380003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2000000,
                    "type": "function",
                    "view": "function table.contentToString(tbl: table)\n  -> Example: string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 2000030,
                "start": 2000009,
                "type": "setfield"
            }
        ],
        "desc": " We need a simple and 'fast' way to convert a lua table into a string.\n\n@*param* `tbl` — Example: { \"Name\", 2, 234, \"string\" }\n\n@*return* `Example` — Name,2,234,string",
        "name": "table.contentToString",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1250027,
                            "start": 1250023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1250037,
                            "start": 1250029,
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreach)",
                    "finish": 1250042,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": 1250000,
                    "type": "function",
                    "view": "function table.foreach(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1250022,
                "start": 1250009,
                "type": "setfield"
            }
        ],
        "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreach)",
        "name": "table.foreach",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1380028,
                            "start": 1380024,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1380038,
                            "start": 1380030,
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreachi)",
                    "finish": 1380043,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": 1380000,
                    "type": "function",
                    "view": "function table.foreachi(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1380023,
                "start": 1380009,
                "type": "setfield"
            }
        ],
        "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreachi)",
        "name": "table.foreachi",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1510024,
                            "start": 1510020,
                            "type": "local",
                            "view": "<T>[]"
                        }
                    ],
                    "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.getn)",
                    "finish": 1510029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1510000,
                    "type": "function",
                    "view": "function table.getn(list: <T>[])\n  -> integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1510019,
                "start": 1510009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.getn)",
        "name": "table.getn",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 700026,
                            "start": 700023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 700033,
                            "start": 700028,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": " https://stackoverflow.com/a/52922737/3493998",
                    "finish": 780003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer|nil"
                        }
                    ],
                    "start": 700000,
                    "type": "function",
                    "view": "function table.indexOf(tbl: any, value: any)\n  -> integer|nil"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 700022,
                "start": 700009,
                "type": "setfield"
            }
        ],
        "desc": " https://stackoverflow.com/a/52922737/3493998",
        "name": "table.indexOf",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 320026,
                            "start": 320022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 320031,
                            "start": 320028,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 320038,
                            "start": 320033,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.insert)",
                    "finish": 320043,
                    "start": 320000,
                    "type": "function",
                    "view": "function table.insert(list: table, pos: integer, value: any)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 320021,
                "start": 320009,
                "type": "setfield"
            }
        ],
        "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.insert)",
        "name": "table.insert",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930029,
                            "start": 930025,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 930035,
                            "start": 930031,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": " DEPRECATED use table.insertAllButNotDuplicates(tbl1, tbl2)\n Adds all values of tbl2 into tbl1.",
                    "finish": 1030003,
                    "start": 930000,
                    "type": "function",
                    "view": "function table.insertAll(tbl1: table, tbl2: table)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 930024,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": " DEPRECATED use table.insertAllButNotDuplicates(tbl1, tbl2)\n Adds all values of tbl2 into tbl1.",
        "name": "table.insertAll",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1080045,
                            "start": 1080041,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 1080051,
                            "start": 1080047,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": " Adds all values of tbl2 into tbl1, but not duplicates.",
                    "finish": 1370003,
                    "start": 1080000,
                    "type": "function",
                    "view": "function table.insertAllButNotDuplicates(tbl1: table, tbl2: table)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 1080040,
                "start": 1080009,
                "type": "setfield"
            }
        ],
        "desc": " Adds all values of tbl2 into tbl1, but not duplicates.",
        "name": "table.insertAllButNotDuplicates",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830035,
                            "start": 830032,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 830042,
                            "start": 830037,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": " Adds a value to a table, if this value doesn't exist in the table",
                    "finish": 870003,
                    "start": 830000,
                    "type": "function",
                    "view": "function table.insertIfNotExist(tbl: table, value: any)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 830031,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": " Adds a value to a table, if this value doesn't exist in the table",
        "name": "table.insertIfNotExist",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430025,
                            "start": 430020,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.maxn)",
                    "finish": 430030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "function table.maxn(table: table)\n  -> integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 430019,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.maxn)",
        "name": "table.maxn",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 630022,
                            "start": 630020,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 630025,
                            "start": 630024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630028,
                            "start": 630027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630031,
                            "start": 630030,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630035,
                            "start": 630033,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.move)",
                    "finish": 630040,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 630000,
                    "type": "function",
                    "view": "function table.move(a1: table, f: integer, e: integer, t: integer, a2?: table)\n  -> a2: table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 630019,
                "start": 630009,
                "type": "setfield"
            }
        ],
        "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.move)",
        "name": "table.move",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 730023,
                            "start": 730020,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.pack)",
                    "finish": 730028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 730000,
                    "type": "function",
                    "view": "function table.pack(...any)\n  -> table"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 730019,
                "start": 730009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.pack)",
        "name": "table.pack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830026,
                            "start": 830022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 830031,
                            "start": 830028,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.remove)",
                    "finish": 830036,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function table.remove(list: table, pos?: integer)\n  -> any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 830021,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.remove)",
        "name": "table.remove",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 590033,
                            "start": 590029,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 590039,
                            "start": 590035,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": " Removes all values in tbl1 by the values of tbl2\n\n@*return* `tbl1` — returns tbl1 with remove values containing in tbl2",
                    "finish": 670003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 590000,
                    "type": "function",
                    "view": "function table.removeByTable(tbl1: table, tbl2: table)\n  -> tbl1: table"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 590028,
                "start": 590009,
                "type": "setfield"
            }
        ],
        "desc": " Removes all values in tbl1 by the values of tbl2\n\n@*return* `tbl1` — returns tbl1 with remove values containing in tbl2",
        "name": "table.removeByTable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 470032,
                            "start": 470029,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 470039,
                            "start": 470034,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 530003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 470000,
                    "type": "function",
                    "view": "function table.removeByValue(tbl: any, value: any)\n  -> unknown"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 470028,
                "start": 470009,
                "type": "setfield"
            }
        ],
        "name": "table.removeByValue",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "table to set the metamethods",
                            "finish": 1590047,
                            "start": 1590044,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "k or v or kv",
                            "finish": 1590053,
                            "start": 1590049,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": " Sets metamethods for the table, which are default metamethods for NoitaMP.\n __mode = \"kv\" is set, so the table can be used as a weak table on key and value.\n __index = decreases __len by 1, so the table can be used as a stack.\n __newindex = increases __len by 1, so the table can be used as a stack.\n __len isn't available in lua 5.1, so init it.\n\n@*param* `tbl` — table to set the metamethods\n\n@*param* `mode` — k or v or kv",
                    "finish": 1950003,
                    "start": 1590000,
                    "type": "function",
                    "view": "function table.setNoitaMpDefaultMetaMethods(tbl: table, mode?: string)"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 1590043,
                "start": 1590009,
                "type": "setfield"
            }
        ],
        "desc": " Sets metamethods for the table, which are default metamethods for NoitaMP.\n __mode = \"kv\" is set, so the table can be used as a weak table on key and value.\n __index = decreases __len by 1, so the table can be used as a stack.\n __newindex = increases __len by 1, so the table can be used as a stack.\n __len isn't available in lua 5.1, so init it.\n\n@*param* `tbl` — table to set the metamethods\n\n@*param* `mode` — k or v or kv",
        "name": "table.setNoitaMpDefaultMetaMethods",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1390021,
                            "start": 1390020,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1500003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1390000,
                    "type": "function",
                    "view": "function table.size(T: any)\n  -> integer"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/tableExtensions.lua",
                "finish": 1390019,
                "start": 1390009,
                "type": "setfield"
            }
        ],
        "name": "table.size",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930024,
                            "start": 930020,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 930030,
                            "start": 930026,
                            "type": "local",
                            "view": "(fun(a: <T>, b: <T>):boolean)?"
                        }
                    ],
                    "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.sort)",
                    "finish": 930035,
                    "start": 930000,
                    "type": "function",
                    "view": "function table.sort(list: <T>[], comp?: fun(a: <T>, b: <T>):boolean)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 930019,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.sort)",
        "name": "table.sort",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1120026,
                            "start": 1120022,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 1120029,
                            "start": 1120028,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 1120032,
                            "start": 1120031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.unpack)",
                    "finish": 1120037,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 1120000,
                    "type": "function",
                    "view": "function table.unpack(list: <T>[], i?: integer, j?: integer)\n  -> ...<T>"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1120021,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.unpack)",
        "name": "table.unpack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 590024,
                            "start": 590019,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 790003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 590000,
                    "type": "function",
                    "view": "function toBoolean(value: any)\n  -> boolean"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/extensions/globalExtensions.lua",
                "finish": 590018,
                "start": 590009,
                "type": "setglobal"
            }
        ],
        "name": "toBoolean",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3240019,
                            "start": 3240018,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [§3.1](http://www.lua.org/manual/5.4/manual.html#3.1)). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tonumber)",
                    "finish": 3240024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": 3240000,
                    "type": "function",
                    "view": "function tonumber(e: any)\n  -> number?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3240017,
                "start": 3240009,
                "type": "setglobal"
            }
        ],
        "desc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [§3.1](http://www.lua.org/manual/5.4/manual.html#3.1)). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tonumber)",
        "name": "tonumber",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3390019,
                            "start": 3390018,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tostring)",
                    "finish": 3390024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 3390000,
                    "type": "function",
                    "view": "function tostring(v: any)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3390017,
                "start": 3390009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tostring)",
        "name": "tostring",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3600015,
                            "start": 3600014,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-type)\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                    "finish": 3600020,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"boolean\"|\"function\"|\"nil\"|\"number\"|\"string\"...(+3)"
                        }
                    ],
                    "start": 3600000,
                    "type": "function",
                    "view": "function type(v: any)\n  -> type: \"boolean\"|\"function\"|\"nil\"|\"number\"|\"string\"...(+3)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3600013,
                "start": 3600009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-type)\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
        "name": "type",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4070020,
                            "start": 4070016,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 4070023,
                            "start": 4070022,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 4070026,
                            "start": 4070025,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-unpack)",
                    "finish": 4070031,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 4070000,
                    "type": "function",
                    "view": "function unpack(list: <T>[], i?: integer, j?: integer)\n  -> ...<T>"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 4070015,
                "start": 4070009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-unpack)",
        "name": "unpack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 150009,
                    "start": 150007,
                    "type": "table",
                    "view": "utf8lib"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 150004,
                "start": 150000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8)\n",
        "name": "utf8",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 260023,
                            "start": 260019,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 260028,
                            "start": 260025,
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.char)",
                    "finish": 260033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 260000,
                    "type": "function",
                    "view": "function utf8.char(code: integer, ...integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 260018,
                "start": 260009,
                "type": "setfield"
            }
        ],
        "desc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.char)",
        "name": "utf8.char",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 570025,
                            "start": 570024,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 570028,
                            "start": 570027,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 570031,
                            "start": 570030,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 570036,
                            "start": 570033,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codepoint)",
                    "finish": 570041,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 570000,
                    "type": "function",
                    "view": "function utf8.codepoint(s: string, i?: integer, j?: integer, lax?: boolean)\n  -> code: integer\n  2. ...integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 570023,
                "start": 570009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codepoint)",
        "name": "utf8.codepoint",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430021,
                            "start": 430020,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 430026,
                            "start": 430023,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codes)",
                    "finish": 430031,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(s: string, p: integer):integer, integer"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "function utf8.codes(s: string, lax?: boolean)\n  -> fun(s: string, p: integer):integer, integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 430019,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codes)",
        "name": "utf8.codes",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 710019,
                            "start": 710018,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 710022,
                            "start": 710021,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 710025,
                            "start": 710024,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 710030,
                            "start": 710027,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.len)",
                    "finish": 710035,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        },
                        {
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 710000,
                    "type": "function",
                    "view": "function utf8.len(s: string, i?: integer, j?: integer, lax?: boolean)\n  -> integer?\n  2. errpos: integer?"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 710017,
                "start": 710009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.len)",
        "name": "utf8.len",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830022,
                            "start": 830021,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 830025,
                            "start": 830024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 830028,
                            "start": 830027,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.offset)",
                    "finish": 830033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function utf8.offset(s: string, n: integer, i?: integer)\n  -> p: integer"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 830020,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.offset)",
        "name": "utf8.offset",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3760021,
                            "start": 3760014,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 3760026,
                            "start": 3760023,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-warn)",
                    "finish": 3760031,
                    "start": 3760000,
                    "type": "function",
                    "view": "function warn(message: string, ...any)"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3760013,
                "start": 3760009,
                "type": "setglobal"
            }
        ],
        "desc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-warn)",
        "name": "warn",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 460003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 380012,
                    "type": "function",
                    "view": "function _G.whoAmI()\n  -> string"
                },
                "file": "file:///d%3A/______BACKUP/NoitaMP_repo/NoitaMP/mods/noita-mp/files/scripts/init/init_.lua",
                "finish": 380009,
                "start": 380000,
                "type": "setfield"
            }
        ],
        "name": "whoAmI",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3890017,
                            "start": 3890016,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 3890023,
                            "start": 3890019,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 3890029,
                            "start": 3890025,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3890034,
                            "start": 3890031,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-xpcall)",
                    "finish": 3890039,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 3890000,
                    "type": "function",
                    "view": "function xpcall(f: fun(...any):...unknown, msgh: function, arg1?: any, ...any)\n  -> success: boolean\n  2. result: any\n  3. ...any"
                },
                "file": "file:///c%3A/Users/Ismoh-PC/.vscode/extensions/sumneko.lua-3.6.18-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3890015,
                "start": 3890009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-xpcall)",
        "name": "xpcall",
        "type": "variable"
    }
]